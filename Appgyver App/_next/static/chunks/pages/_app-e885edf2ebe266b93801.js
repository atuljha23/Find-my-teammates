_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[14],{"/JH9":function(e){e.exports=JSON.parse('{"parserVersion":"4.0.5","screens":{"page.Page1":{"initStateProps":{},"pageFlowId":"page:1","pageId":"page.Page1","title":"Empty page","disableSafeArea":false,"parameters":{},"pageVariables":{"selectedDate":"","dateselected":false,"showimage":true},"dataReferences":{"FetchedUsers":[],"Users1":[]},"dataResources":[{"action_name":"data.findAll","resource_name":"Users","reference_name":"FetchedUsers","data_canvas_flow_id":"data:Users194924645"},{"query":{},"action_name":"data.findAll","resource_name":"Users","reference_name":"Users1","data_canvas_flow_id":"data:Users136690890"}],"events":{"onPageDidMount":[{"id":"885fe943.9916e8"},{"id":"17a46f4034352.e65515511224f"}],"selectedDate:onChange":[{"id":"2c56a4b5.f64a2c"}]},"components":[{"id":"1-8a4cd60c-edb6-448c-b226-892e3d1fcd0c","ch":[{"id":"87e6be80-d305-4c99-a944-a3d7394f3c02","ch":[{"id":"2b848ff4-3fbf-4887-b001-f4b9a90eb8b3","ch":[{"id":"8388a0a3-f568-46a2-9f6a-e8a772497bee"}]},{"id":"d3fed106-d77a-4914-9c8d-6b679ad12e4a","ch":[{"id":"312ee298-e65e-490c-99c3-1799c8a80242"}]}]},{"id":"e3089dac-ff9a-47e2-9c5d-cfe86fae7849"},{"id":"4e5f7086-09b3-4bc5-8e67-9135c86f20be"},{"id":"629defbb-6067-47e4-856c-b5231c8d4484"},{"id":"c4b18d6e-b86a-48eb-9b5a-5c0597766a35"},{"id":"8ff91adf-6268-4ab4-8d6a-32155cbd6a16","ch":[{"id":"0f608388-f845-47e5-8012-d4613337e5c3","ch":[{"id":"3efe4286-9c3c-4035-a6d6-f683abbbd271"}]},{"id":"c65c9fbd-505f-49fb-88d5-23e7219c29b9","ch":[{"id":"3bd2da30-948e-4ccb-9e9d-1bff2a422926"}]},{"id":"3e5e1f7e-f4ab-4a90-b16c-50963b06d922","ch":[{"id":"d43d319e-41a9-4541-812d-722ce000f655"}]},{"id":"57db55df-90a6-458f-983c-509aea5999fa","ch":[{"id":"ff1b4f03-cd8d-4adf-b4e5-71986994bbc8"}]}]},{"id":"9e7529f4-77f0-419c-aa64-2449e8878a36","ch":[{"id":"1a7c5223-4173-4e9a-b77b-418e22bd4a96","ch":[{"id":"52ff2453-b801-4b60-b962-8b27d2ba0fe7","ch":[{"id":"2bc47fde-7d56-42f7-b1c2-aeafc0f90e82"}]},{"id":"2749adcd-253f-462f-b0b1-00387383445f","ch":[{"id":"931c6bbe-ed70-4331-93b2-0ac79c404347"}]},{"id":"826ff034-c151-40a7-ba7a-971d6319e60f","ch":[{"id":"c203873f-f069-4bb1-aed6-084459d45004"}]},{"id":"315a5ae4-1aaa-41fa-9eb3-6f53305f2484","ch":[{"id":"0425fc0a-66fe-47fb-bc93-073b5e70278d"}]}]}]}]}]},"page.Page2":{"initStateProps":{},"pageFlowId":"page:2","pageId":"page.Page2","title":"Global canvas","isGlobalCanvas":true,"disableSafeArea":false,"parameters":{},"pageVariables":{},"events":{},"components":[{"id":"2-84e385ea-c5ad-4784-8405-bfa4dc093f33"}]},"page.Page3":{"initStateProps":{"783c987c-7119-4602-8138-43eb93aab039":["label","placeholder","keyboardType","disabled","multlineInput","autoCapitalize","passwordInput"],"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c":["labelText","optionList","label","placeholder","showSelectedValueAsLabel"],"74fef9de-c234-405d-b4b9-b3a42cbb736c":["label","placeholder","keyboardType","disabled","multlineInput","autoCapitalize","passwordInput"]},"pageFlowId":"page:3","pageId":"page.Page3","title":"Add Records","disableSafeArea":false,"parameters":{},"pageVariables":{"building":"","desk":"","userName":"","date":""},"dataReferences":{},"dataResources":[],"events":{"onPageDidMount":[{"id":"85f61a27ed86d.c25e879fd1b65"}]},"components":[{"id":"3-82c5b68c-abb3-4993-9a7d-6b76b2e7a0ee","ch":[{"id":"fc3af729-417c-4c92-9479-da9e055fa01f","ch":[{"id":"a2e72fee-5aac-4fb1-befd-c1f0d586c328","ch":[{"id":"f5886719-d8ae-4725-94d1-e03e9b576677"}]},{"id":"69662bb7-3d08-4d7d-bc0a-eae8d19573de","ch":[{"id":"586f61f1-3f8f-456f-815a-874d3c3e9bd6"}]}]},{"id":"4b6ed7a0-4c00-45d3-b737-3d6b6421203c"},{"id":"baef419a-e896-44f5-a18a-66159daf5dbc"},{"id":"783c987c-7119-4602-8138-43eb93aab039","ch":[{"id":"237dcc5c-b714-426a-93e6-f133858a66f2"},{"id":"7a62ed43-d48d-4067-9f87-aa02598f4266"}]},{"id":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","ch":[{"id":"31f2b383-9366-403b-ad62-1850171aac8f"},{"id":"166dd2ec-8136-4d95-a501-f0be2fd7cd89","ch":[{"id":"17f9a700-45d1-48ab-8ed5-eddbb1547e27"},{"id":"ea636485-976c-4530-9417-12e28c228ae1"}]}]},{"id":"74fef9de-c234-405d-b4b9-b3a42cbb736c","ch":[{"id":"4c58f29a-a31b-41bf-953e-f133858a66f2"},{"id":"063a4626-fe4e-45ad-8504-aa02598f4266"}]},{"id":"688cbd2e-3263-44ab-9395-74cf74b50484"},{"id":"1a1618c2-60dc-4804-90b4-8c9db354329d"}]}]}},"components":{"1-8a4cd60c-edb6-448c-b226-892e3d1fcd0c":{"id":"1-8a4cd60c-edb6-448c-b226-892e3d1fcd0c","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:8a4cd60c-edb6-448c-b226-892e3d1fcd0c","styles":{"holder":{"flex":1,"backgroundColor":"#20262d","paddingTop":8,"paddingLeft":16,"paddingRight":16,"paddingBottom":8,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Layout","pageId":"page.Page1"},"87e6be80-d305-4c99-a944-a3d7394f3c02":{"id":"87e6be80-d305-4c99-a944-a3d7394f3c02","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":2,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:87e6be80-d305-4c99-a944-a3d7394f3c02","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backfaceVisibility":"hidden","backgroundColor":"#354a5f","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"2b848ff4-3fbf-4887-b001-f4b9a90eb8b3":{"id":"2b848ff4-3fbf-4887-b001-f4b9a90eb8b3","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:2b848ff4-3fbf-4887-b001-f4b9a90eb8b3","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"backgroundColor":"#354a5f","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"8388a0a3-f568-46a2-9f6a-e8a772497bee":{"id":"8388a0a3-f568-46a2-9f6a-e8a772497bee","props":{"contextPropTypes":["visible","data","styles","animationsConfig","src"],"src":"https://svgshare.com/i/ard.svg","visible":true,"flowGroupId":"page:1:component:8388a0a3-f568-46a2-9f6a-e8a772497bee","styles":{"con":{"marginTop":8,"borderRadius":0.1,"marginBottom":8,"width":"100%","opacity":1,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"borderColor":"rgb(0,0,0)","borderWidth":0,"marginRight":0,"backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"image":{"width":"100%","resizeMode":"contain","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Picture","pageId":"page.Page1"},"d3fed106-d77a-4914-9c8d-6b679ad12e4a":{"id":"d3fed106-d77a-4914-9c8d-6b679ad12e4a","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:d3fed106-d77a-4914-9c8d-6b679ad12e4a","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":4,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"312ee298-e65e-490c-99c3-1799c8a80242":{"id":"312ee298-e65e-490c-99c3-1799c8a80242","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Teammates Finder","visible":true,"flowGroupId":"page:1:component:312ee298-e65e-490c-99c3-1799c8a80242","styles":{"text":{"color":"#ffffff","fontSize":28,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"paddingRight":0,"backgroundColor":"#354a5f","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"e3089dac-ff9a-47e2-9c5d-cfe86fae7849":{"id":"e3089dac-ff9a-47e2-9c5d-cfe86fae7849","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Find your teammates within office.","visible":true,"flowGroupId":"page:1:component:e3089dac-ff9a-47e2-9c5d-cfe86fae7849","styles":{"text":{"color":"#ffffff","fontSize":16,"fontFamily":"Roboto Mono","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"textDecorationLine":"none","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"4e5f7086-09b3-4bc5-8e67-9135c86f20be":{"id":"4e5f7086-09b3-4bc5-8e67-9135c86f20be","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","disabled"],"label":"Select Date","visible":true,"disabled":false,"flowGroupId":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","styles":{"text":{"color":"rgb(255, 255, 255)","fontSize":18,"fontFamily":"Open Sans","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"button":{"marginTop":8,"minHeight":56,"borderWidth":0,"paddingLeft":8,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":3,"marginBottom":8,"paddingRight":8,"shadowRadius":7,"backgroundColor":"#1b8dec","shadowOffset":{"width":0,"height":4},"shadowOpacity":0,"display":"flex","opacity":1,"position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"marginRight":0,"paddingBottom":0,"justifyContent":"center","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{"tap":[{"id":"86d2bd28.e3c7e"}],"onPress":[{"id":"86d2bd28.e3c7e"}]}},"reactClass":"Button","pageId":"page.Page1"},"629defbb-6067-47e4-856c-b5231c8d4484":{"id":"629defbb-6067-47e4-856c-b5231c8d4484","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Waiting for initial input from user to filter the result accordingly. \ud83d\udd0e","visible":true,"bindings":[{"type":"page-variable","sourceId":"showimage","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:629defbb-6067-47e4-856c-b5231c8d4484","styles":{"text":{"color":"#ffffff","fontSize":14,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"textAlign":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["visible"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"c4b18d6e-b86a-48eb-9b5a-5c0597766a35":{"id":"c4b18d6e-b86a-48eb-9b5a-5c0597766a35","props":{"contextPropTypes":["visible","data","styles","animationsConfig","src"],"src":"https://appgyver-meap-assets.s3.amazonaws.com/uploads/asset/acual_asset/af64cbbc-222e-4773-a41c-e0c7d54b4cb4/image.png","visible":true,"bindings":[{"type":"page-variable","sourceId":"showimage","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:c4b18d6e-b86a-48eb-9b5a-5c0597766a35","styles":{"con":{"marginTop":8,"borderRadius":0.1,"marginBottom":8,"width":"100%","opacity":1,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"borderColor":"rgb(0,0,0)","borderWidth":0,"marginRight":0,"backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"image":{"width":"100%","resizeMode":"contain","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["visible"],"expressionProps":[],"events":{}},"reactClass":"Picture","pageId":"page.Page1"},"8ff91adf-6268-4ab4-8d6a-32155cbd6a16":{"id":"8ff91adf-6268-4ab4-8d6a-32155cbd6a16","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":4,"visible":true,"backgroundImage":"","bindings":[{"type":"page-variable","sourceId":"dateselected","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:8ff91adf-6268-4ab4-8d6a-32155cbd6a16","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["visible"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"0f608388-f845-47e5-8012-d4613337e5c3":{"id":"0f608388-f845-47e5-8012-d4613337e5c3","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:0f608388-f845-47e5-8012-d4613337e5c3","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"3efe4286-9c3c-4035-a6d6-f683abbbd271":{"id":"3efe4286-9c3c-4035-a6d6-f683abbbd271","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Name","visible":true,"flowGroupId":"page:1:component:3efe4286-9c3c-4035-a6d6-f683abbbd271","styles":{"text":{"color":"#ffffff","fontSize":12,"fontFamily":"Roboto Mono","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"textDecorationLine":"none","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"c65c9fbd-505f-49fb-88d5-23e7219c29b9":{"id":"c65c9fbd-505f-49fb-88d5-23e7219c29b9","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:c65c9fbd-505f-49fb-88d5-23e7219c29b9","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"3bd2da30-948e-4ccb-9e9d-1bff2a422926":{"id":"3bd2da30-948e-4ccb-9e9d-1bff2a422926","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Building","visible":true,"flowGroupId":"page:1:component:3bd2da30-948e-4ccb-9e9d-1bff2a422926","styles":{"text":{"color":"#ffffff","fontSize":12,"fontFamily":"Open Sans","fontWeight":"800","lineHeight":36,"textTransform":"none","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"fontStyle":"normal","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"3e5e1f7e-f4ab-4a90-b16c-50963b06d922":{"id":"3e5e1f7e-f4ab-4a90-b16c-50963b06d922","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:3e5e1f7e-f4ab-4a90-b16c-50963b06d922","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"d43d319e-41a9-4541-812d-722ce000f655":{"id":"d43d319e-41a9-4541-812d-722ce000f655","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Desk","visible":true,"flowGroupId":"page:1:component:d43d319e-41a9-4541-812d-722ce000f655","styles":{"text":{"color":"#ffffff","fontSize":12,"fontFamily":"Open Sans","fontWeight":"800","lineHeight":36,"textTransform":"none","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"fontStyle":"italic","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"57db55df-90a6-458f-983c-509aea5999fa":{"id":"57db55df-90a6-458f-983c-509aea5999fa","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:57db55df-90a6-458f-983c-509aea5999fa","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"ff1b4f03-cd8d-4adf-b4e5-71986994bbc8":{"id":"ff1b4f03-cd8d-4adf-b4e5-71986994bbc8","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Date","visible":true,"flowGroupId":"page:1:component:ff1b4f03-cd8d-4adf-b4e5-71986994bbc8","styles":{"text":{"color":"#ffffff","fontSize":12,"fontFamily":"Open Sans","fontWeight":"800","lineHeight":36,"textTransform":"none","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"fontStyle":"italic","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1"},"9e7529f4-77f0-419c-aa64-2449e8878a36":{"id":"9e7529f4-77f0-419c-aa64-2449e8878a36","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:9e7529f4-77f0-419c-aa64-2449e8878a36","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backgroundColor":"#29313a","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1"},"1a7c5223-4173-4e9a-b77b-418e22bd4a96":{"isRepeat":true,"repeatAs":"current","id":"1a7c5223-4173-4e9a-b77b-418e22bd4a96","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":4,"visible":true,"backgroundImage":"","bindings":[{"type":"data","sourceId":"FetchedUsers","sourceProp":"","targetProp":"data","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"}],"flowGroupId":"page:1:component:1a7c5223-4173-4e9a-b77b-418e22bd4a96","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","borderColor":"#ffffff","borderStyle":"dotted","borderWidth":1},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["data"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"52ff2453-b801-4b60-b962-8b27d2ba0fe7":{"id":"52ff2453-b801-4b60-b962-8b27d2ba0fe7","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:52ff2453-b801-4b60-b962-8b27d2ba0fe7","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"2bc47fde-7d56-42f7-b1c2-aeafc0f90e82":{"id":"2bc47fde-7d56-42f7-b1c2-aeafc0f90e82","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"current.userName","visible":true,"bindings":[{"type":"repeat","targetProp":"content","dataSource":"current","sourceProp":"userName","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"},{"type":"page-variable","sourceId":"dateselected","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:2bc47fde-7d56-42f7-b1c2-aeafc0f90e82","styles":{"text":{"color":"#ffffff","fontSize":10,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"#29313a","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content","visible"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"2749adcd-253f-462f-b0b1-00387383445f":{"id":"2749adcd-253f-462f-b0b1-00387383445f","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:2749adcd-253f-462f-b0b1-00387383445f","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"931c6bbe-ed70-4331-93b2-0ac79c404347":{"id":"931c6bbe-ed70-4331-93b2-0ac79c404347","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"current.building","visible":true,"bindings":[{"type":"repeat","targetProp":"content","dataSource":"current","sourceProp":"building","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"},{"type":"page-variable","sourceId":"dateselected","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:931c6bbe-ed70-4331-93b2-0ac79c404347","styles":{"text":{"color":"#ffffff","fontSize":10,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"#29313a","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content","visible"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"826ff034-c151-40a7-ba7a-971d6319e60f":{"id":"826ff034-c151-40a7-ba7a-971d6319e60f","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:826ff034-c151-40a7-ba7a-971d6319e60f","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"c203873f-f069-4bb1-aed6-084459d45004":{"id":"c203873f-f069-4bb1-aed6-084459d45004","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"current.desk","visible":true,"bindings":[{"type":"repeat","targetProp":"content","dataSource":"current","sourceProp":"desk","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"},{"type":"page-variable","sourceId":"dateselected","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:c203873f-f069-4bb1-aed6-084459d45004","styles":{"text":{"color":"#ffffff","fontSize":10,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"#29313a","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content","visible"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"315a5ae4-1aaa-41fa-9eb3-6f53305f2484":{"id":"315a5ae4-1aaa-41fa-9eb3-6f53305f2484","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:1:component:315a5ae4-1aaa-41fa-9eb3-6f53305f2484","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"0425fc0a-66fe-47fb-bc93-073b5e70278d":{"id":"0425fc0a-66fe-47fb-bc93-073b5e70278d","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"current.date","visible":true,"bindings":[{"type":"repeat","targetProp":"content","dataSource":"current","sourceProp":"date","aliasKey":"current-1a7c5223-4173-4e9a-b77b-418e22bd4a96"},{"type":"page-variable","sourceId":"dateselected","sourceProp":"","targetProp":"visible"}],"flowGroupId":"page:1:component:0425fc0a-66fe-47fb-bc93-073b5e70278d","styles":{"text":{"color":"#ffffff","fontSize":10,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"#29313a","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["content","visible"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page1","rocid":"1a7c5223-4173-4e9a-b77b-418e22bd4a96"},"2-84e385ea-c5ad-4784-8405-bfa4dc093f33":{"id":"2-84e385ea-c5ad-4784-8405-bfa4dc093f33","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:2:component:84e385ea-c5ad-4784-8405-bfa4dc093f33","styles":{"holder":{"flex":1,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Layout","pageId":"page.Page2"},"3-82c5b68c-abb3-4993-9a7d-6b76b2e7a0ee":{"id":"3-82c5b68c-abb3-4993-9a7d-6b76b2e7a0ee","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:82c5b68c-abb3-4993-9a7d-6b76b2e7a0ee","styles":{"holder":{"flex":1,"backgroundColor":"#20262d","paddingTop":8,"paddingLeft":16,"paddingRight":16,"paddingBottom":8,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Layout","pageId":"page.Page3"},"fc3af729-417c-4c92-9479-da9e055fa01f":{"id":"fc3af729-417c-4c92-9479-da9e055fa01f","props":{"contextPropTypes":["visible","data","styles","animationsConfig","columns","backgroundImage"],"columns":2,"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:fc3af729-417c-4c92-9479-da9e055fa01f","styles":{"holder":{"width":"100%","opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"flexDirection":"row","paddingBottom":0,"justifyContent":"flex-start","backfaceVisibility":"hidden","color":"#ffffff","paddingRight":0,"backgroundColor":"#354a5f","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"a2e72fee-5aac-4fb1-befd-c1f0d586c328":{"id":"a2e72fee-5aac-4fb1-befd-c1f0d586c328","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:a2e72fee-5aac-4fb1-befd-c1f0d586c328","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":1,"flexBasis":0,"backgroundColor":"#354a5f","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"f5886719-d8ae-4725-94d1-e03e9b576677":{"id":"f5886719-d8ae-4725-94d1-e03e9b576677","props":{"contextPropTypes":["visible","data","styles","animationsConfig","src"],"src":"https://sapui5.hana.ondemand.com/1.94.1/resources/sap/ushell/themes/base/img/SAPLogo.svg","visible":true,"flowGroupId":"page:3:component:f5886719-d8ae-4725-94d1-e03e9b576677","styles":{"con":{"marginTop":8,"borderRadius":0.1,"marginBottom":8,"width":"100%","opacity":1,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"borderColor":"rgb(0,0,0)","borderWidth":0,"marginRight":0,"backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"image":{"width":"100%","resizeMode":"contain","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Picture","pageId":"page.Page3"},"69662bb7-3d08-4d7d-bc0a-eae8d19573de":{"id":"69662bb7-3d08-4d7d-bc0a-eae8d19573de","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"stretchToTheHeight":true,"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:69662bb7-3d08-4d7d-bc0a-eae8d19573de","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexGrow":5,"flexBasis":0,"backgroundColor":"#354a5f","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"586f61f1-3f8f-456f-815a-874d3c3e9bd6":{"id":"586f61f1-3f8f-456f-815a-874d3c3e9bd6","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"New Desk Entry","visible":true,"flowGroupId":"page:3:component:586f61f1-3f8f-456f-815a-874d3c3e9bd6","styles":{"text":{"color":"#ffffff","fontSize":28,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":36,"textTransform":"none","fontStyle":"normal","textShadowRadius":2,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"textAlign":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"#354a5f","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page3"},"4b6ed7a0-4c00-45d3-b737-3d6b6421203c":{"id":"4b6ed7a0-4c00-45d3-b737-3d6b6421203c","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:4b6ed7a0-4c00-45d3-b737-3d6b6421203c","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"baef419a-e896-44f5-a18a-66159daf5dbc":{"id":"baef419a-e896-44f5-a18a-66159daf5dbc","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Let\'s add the details of your next office visit so that your teammates can find you easily!","visible":true,"flowGroupId":"page:3:component:baef419a-e896-44f5-a18a-66159daf5dbc","styles":{"text":{"color":"#ffffff","fontSize":16,"fontFamily":"Roboto Mono","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textShadowRadius":0,"textDecorationStyle":"solid","textShadowOffset":{"width":0,"height":0},"textDecorationLine":"none","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":8,"marginBottom":8,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","marginLeft":0,"marginRight":0,"backgroundColor":"rgba(255,255,255,0)","borderTopEndRadius":0,"borderTopStartRadius":0,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page3"},"783c987c-7119-4602-8138-43eb93aab039":{"isComposite":true,"id":"783c987c-7119-4602-8138-43eb93aab039","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","value","placeholder","autoCapitalize","disabled","keyboardType","multlineInput","passwordInput"],"label":"Name","value":"John","placeholder":"Type here\u2026","autoCapitalize":"none","disabled":false,"keyboardType":"default","multlineInput":false,"passwordInput":false,"visible":true,"bindings":[{"type":"page-variable","sourceId":"userName","sourceProp":"","targetProp":"value"}],"flowGroupId":"page:3:component:783c987c-7119-4602-8138-43eb93aab039","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["value"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"237dcc5c-b714-426a-93e6-f133858a66f2":{"id":"237dcc5c-b714-426a-93e6-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:3:component:237dcc5c-b714-426a-93e6-f133858a66f2","styles":{"text":{"color":"#ffffff","fontSize":14,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page3","rcid":"783c987c-7119-4602-8138-43eb93aab039"},"7a62ed43-d48d-4067-9f87-aa02598f4266":{"id":"7a62ed43-d48d-4067-9f87-aa02598f4266","props":{"contextPropTypes":["visible","data","styles","animationsConfig","value","placeholder","keyboardType","disabled","multiline","autoCapitalize","secureTextEntry"],"placeholder":"Type here\u2026","visible":true,"keyboardType":"default","disabled":false,"multiline":false,"autoCapitalize":"none","secureTextEntry":false,"bindings":[{"type":"page-variable","sourceId":"userName","sourceProp":"","sourcePropSubPath":"","targetProp":"value"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"placeholder","sourcePropSubPath":"","targetProp":"placeholder"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"keyboardType","sourcePropSubPath":"","targetProp":"keyboardType"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"disabled","sourcePropSubPath":"","targetProp":"disabled"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"multlineInput","sourcePropSubPath":"","targetProp":"multiline"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"autoCapitalize","sourcePropSubPath":"","targetProp":"autoCapitalize"},{"type":"component","sourceId":"783c987c-7119-4602-8138-43eb93aab039","sourceProp":"passwordInput","sourcePropSubPath":"","targetProp":"secureTextEntry"}],"flowGroupId":"page:3:component:7a62ed43-d48d-4067-9f87-aa02598f4266","styles":{"text":{"color":"#ffffff","fontSize":16,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"holder":{"paddingTop":8,"borderColor":"rgb(138, 154, 167)","borderStyle":"solid","paddingLeft":0,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":0,"paddingRight":0,"paddingBottom":8,"borderTopWidth":0,"borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":1,"shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"width":"100%","opacity":1,"alignSelf":"auto","elevation":0,"marginTop":0,"marginLeft":0,"marginRight":0,"marginBottom":0,"backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden"},"textSupplemental":{"inactiveColor":"rgb(138, 154, 167)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["value","placeholder","keyboardType","disabled","multiline","autoCapitalize","secureTextEntry"],"expressionProps":[],"events":{}},"reactClass":"Input","pageId":"page.Page3","rcid":"783c987c-7119-4602-8138-43eb93aab039"},"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c":{"isComposite":true,"id":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","props":{"contextPropTypes":["visible","data","styles","animationsConfig","labelText","optionList","value","placeholder","label","showSelectedValueAsLabel"],"labelText":"Select Building","optionList":[{"label":"Dublin - DUB01 - Kingswood - First Floor","value":"Dublin - DUB01 - Kingswood - First Floor"},{"label":"Dublin - DUB01 - Kingswood - Ground Floor","value":"Dublin - DUB01 - Kingswood - Ground Floor"},{"label":"Dublin - DUB05 - Waterside 3 - Ground Floor","value":"Dublin - DUB05 - Waterside 3 - Ground Floor"},{"label":"Dublin - DUB05 - Waterside 3 - First Floor","value":"Dublin - DUB05 - Waterside 3 - First Floor"},{"label":"Dublin - DUB05 - Waterside 3 - Second Floor","value":"Dublin - DUB05 - Waterside 3 - Second Floor"},{"label":"Dublin - DUB05 - Waterside 3 - Third Floor","value":"Dublin - DUB05 - Waterside 3 - Third Floor"},{"label":"Dublin - DUB02 - Waterside 2 - Ground Floor","value":"Dublin - DUB02 - Waterside 2 - Ground Floor"},{"label":"Dublin - DUB02 - Waterside 2 - First Floor","value":"Dublin - DUB02 - Waterside 2 - First Floor"},{"label":"Dublin - DUB02 - Waterside 2 - Second Floor","value":"Dublin - DUB02 - Waterside 2 - Second Floor"},{"label":"Dublin - DUB02 - Waterside 2 - Third Floor","value":"Dublin - DUB02 - Waterside 2 - Third Floor"}],"value":"Kingswood","placeholder":"Select option","visible":true,"showSelectedValueAsLabel":false,"bindings":[{"type":"page-variable","sourceId":"building","sourceProp":"","targetProp":"value"}],"flowGroupId":"page:3:component:7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"paddingRight":0,"shadowRadius":0,"flexDirection":"column","paddingBottom":0,"justifyContent":"flex-start","backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","marginTop":8,"marginBottom":8,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["value"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"31f2b383-9366-403b-ad62-1850171aac8f":{"id":"31f2b383-9366-403b-ad62-1850171aac8f","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","sourceProp":"labelText","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:3:component:31f2b383-9366-403b-ad62-1850171aac8f","styles":{"text":{"color":"#ffffff","fontSize":14,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","textAlignVertical":"auto","textDecorationLine":"none","textDecorationColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"padding":0,"alignSelf":"auto","opacity":1,"overflow":"hidden","position":"relative","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page3","rcid":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c"},"166dd2ec-8136-4d95-a501-f0be2fd7cd89":{"id":"166dd2ec-8136-4d95-a501-f0be2fd7cd89","props":{"contextPropTypes":["visible","data","styles","animationsConfig","backgroundImage"],"visible":true,"backgroundImage":"","flowGroupId":"page:3:component:166dd2ec-8136-4d95-a501-f0be2fd7cd89","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","alignContent":"flex-start","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"flexShrink":0,"flexDirection":"column","justifyContent":"center","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3","rcid":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c"},"17f9a700-45d1-48ab-8ed5-eddbb1547e27":{"id":"17f9a700-45d1-48ab-8ed5-eddbb1547e27","props":{"contextPropTypes":["visible","data","styles","animationsConfig","iconName"],"visible":true,"iconName":"angle-down","flowGroupId":"page:3:component:17f9a700-45d1-48ab-8ed5-eddbb1547e27","styles":{"text":{"color":"rgb(0,0,0)","fontSize":24,"borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"opacity":1,"flexGrow":0,"marginTop":0,"flexShrink":0,"marginLeft":0,"paddingTop":0,"marginRight":0,"paddingLeft":0,"marginBottom":0,"paddingRight":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden","right":8,"zIndex":0,"position":"absolute","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{}},"reactClass":"Icon","pageId":"page.Page3","rcid":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c"},"ea636485-976c-4530-9417-12e28c228ae1":{"id":"ea636485-976c-4530-9417-12e28c228ae1","props":{"contextPropTypes":["visible","data","styles","animationsConfig","optionList","value","label","placeholder","showSelectedValueAsLabel"],"placeholder":"Select option","visible":true,"showSelectedValueAsLabel":false,"bindings":[{"type":"component","sourceId":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","sourceProp":"optionList","sourcePropSubPath":"","targetProp":"optionList"},{"type":"page-variable","sourceId":"building","sourceProp":"","sourcePropSubPath":"","targetProp":"value"},{"type":"component","sourceId":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","sourceProp":"label","sourcePropSubPath":"","targetProp":"label"},{"type":"component","sourceId":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","sourceProp":"placeholder","sourcePropSubPath":"","targetProp":"placeholder"},{"type":"component","sourceId":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c","sourceProp":"showSelectedValueAsLabel","sourcePropSubPath":"","targetProp":"showSelectedValueAsLabel"}],"flowGroupId":"page:3:component:ea636485-976c-4530-9417-12e28c228ae1","styles":{"holder":{"color":"#ffffff","fontSize":16,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"paddingTop":8,"borderColor":"rgb(138, 154, 167)","borderStyle":"solid","paddingLeft":0,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":0,"paddingBottom":8,"textTransform":"none","borderTopWidth":0,"borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":1,"shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"width":"100%","opacity":1,"alignSelf":"auto","fontStyle":"normal","marginTop":0,"textAlign":"left","marginLeft":0,"marginRight":0,"marginBottom":0,"backgroundColor":"rgb(255,255,255,0)","backfaceVisibility":"hidden","zIndex":0,"position":"relative","minHeight":40,"paddingRight":32}},"dynamicProps":["optionList","value","label","placeholder","showSelectedValueAsLabel"],"expressionProps":[],"events":{}},"reactClass":"Dropdown","pageId":"page.Page3","rcid":"7785d0f4-ca41-47b0-ae6d-7ed6a3afa12c"},"74fef9de-c234-405d-b4b9-b3a42cbb736c":{"isComposite":true,"id":"74fef9de-c234-405d-b4b9-b3a42cbb736c","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","value","placeholder","autoCapitalize","disabled","keyboardType","multlineInput","passwordInput"],"label":"Add Your Desk Number.","value":"DB-01-1","placeholder":"DB01-","autoCapitalize":"none","disabled":false,"keyboardType":"default","multlineInput":false,"passwordInput":false,"visible":true,"bindings":[{"type":"page-variable","sourceId":"desk","sourceProp":"","targetProp":"value"}],"flowGroupId":"page:3:component:74fef9de-c234-405d-b4b9-b3a42cbb736c","styles":{"holder":{"opacity":1,"flexWrap":"nowrap","overflow":"visible","position":"relative","alignSelf":"auto","marginTop":0,"alignItems":"stretch","marginLeft":0,"paddingTop":0,"borderWidth":0,"marginRight":0,"paddingLeft":0,"shadowColor":"rgba(0,0,0,0.5)","borderRadius":0.1,"marginBottom":0,"paddingRight":0,"shadowRadius":0,"paddingBottom":0,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"backfaceVisibility":"hidden","alignContent":"flex-start","flexDirection":"column","borderTopWidth":0,"justifyContent":"center","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomEndRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0},"backgroundImage":{"resizeMode":"cover","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["value"],"expressionProps":[],"events":{}},"reactClass":"FlexBoxLayout","pageId":"page.Page3"},"4c58f29a-a31b-41bf-953e-f133858a66f2":{"id":"4c58f29a-a31b-41bf-953e-f133858a66f2","props":{"contextPropTypes":["visible","data","styles","animationsConfig","content"],"content":"Headline","visible":true,"bindings":[{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"label","sourcePropSubPath":"","targetProp":"content"}],"flowGroupId":"page:3:component:4c58f29a-a31b-41bf-953e-f133858a66f2","styles":{"text":{"color":"#ffffff","fontSize":14,"fontFamily":"Open Sans","fontWeight":"600","lineHeight":24,"fontStyle":"normal","textShadowRadius":0,"textAlignVertical":"auto","textDecorationLine":"none","textDecorationStyle":"solid","textShadowOffset":{"width":2,"height":2},"textAlign":"left","letterSpacing":0,"textTransform":"none","textShadowColor":"rgba(0,0,0,0)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"view":{"marginTop":0,"marginBottom":0,"opacity":1,"padding":0,"overflow":"hidden","position":"relative","alignSelf":"auto","elevation":0,"marginLeft":0,"paddingTop":0,"borderColor":"rgba(0,0,0,0)","borderWidth":0,"marginRight":0,"paddingLeft":0,"borderRadius":0.1,"paddingRight":0,"paddingBottom":0,"borderTopWidth":0,"backgroundColor":"rgba(255,255,255,0)","borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":0,"backfaceVisibility":"hidden","borderTopLeftRadius":0,"borderTopRightRadius":0,"borderBottomLeftRadius":0,"borderBottomRightRadius":0}},"dynamicProps":["content"],"expressionProps":[],"events":{}},"reactClass":"Text","pageId":"page.Page3","rcid":"74fef9de-c234-405d-b4b9-b3a42cbb736c"},"063a4626-fe4e-45ad-8504-aa02598f4266":{"id":"063a4626-fe4e-45ad-8504-aa02598f4266","props":{"contextPropTypes":["visible","data","styles","animationsConfig","value","placeholder","keyboardType","disabled","multiline","autoCapitalize","secureTextEntry"],"placeholder":"Type here\u2026","visible":true,"keyboardType":"default","disabled":false,"multiline":false,"autoCapitalize":"none","secureTextEntry":false,"bindings":[{"type":"page-variable","sourceId":"desk","sourceProp":"","sourcePropSubPath":"","targetProp":"value"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"placeholder","sourcePropSubPath":"","targetProp":"placeholder"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"keyboardType","sourcePropSubPath":"","targetProp":"keyboardType"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"disabled","sourcePropSubPath":"","targetProp":"disabled"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"multlineInput","sourcePropSubPath":"","targetProp":"multiline"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"autoCapitalize","sourcePropSubPath":"","targetProp":"autoCapitalize"},{"type":"component","sourceId":"74fef9de-c234-405d-b4b9-b3a42cbb736c","sourceProp":"passwordInput","sourcePropSubPath":"","targetProp":"secureTextEntry"}],"flowGroupId":"page:3:component:063a4626-fe4e-45ad-8504-aa02598f4266","styles":{"text":{"color":"#ffffff","fontSize":16,"fontFamily":"Open Sans","fontWeight":"400","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"holder":{"paddingTop":8,"borderColor":"rgb(138, 154, 167)","borderStyle":"solid","paddingLeft":0,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":0,"paddingRight":0,"paddingBottom":8,"borderTopWidth":0,"borderLeftWidth":0,"borderRightWidth":0,"borderBottomWidth":1,"shadowOffset":{"width":0,"height":0},"shadowOpacity":0,"width":"100%","opacity":1,"alignSelf":"auto","elevation":0,"marginTop":0,"marginLeft":0,"marginRight":0,"marginBottom":0,"backgroundColor":"rgba(255,255,255,0)","backfaceVisibility":"hidden"},"textSupplemental":{"inactiveColor":"rgb(138, 154, 167)","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":["value","placeholder","keyboardType","disabled","multiline","autoCapitalize","secureTextEntry"],"expressionProps":[],"events":{}},"reactClass":"Input","pageId":"page.Page3","rcid":"74fef9de-c234-405d-b4b9-b3a42cbb736c"},"688cbd2e-3263-44ab-9395-74cf74b50484":{"id":"688cbd2e-3263-44ab-9395-74cf74b50484","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","disabled"],"label":"Record Date","visible":true,"disabled":false,"flowGroupId":"page:3:component:688cbd2e-3263-44ab-9395-74cf74b50484","styles":{"text":{"color":"rgb(255, 255, 255)","fontSize":18,"fontFamily":"Lato","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"left","textDecorationColor":"#d80e0e","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"button":{"marginTop":8,"minHeight":56,"paddingLeft":1,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":0.1,"marginBottom":8,"paddingRight":8,"shadowRadius":7,"backgroundColor":"rgba(255,255,255,0)","shadowOffset":{"width":0,"height":4},"shadowOpacity":0,"display":"flex","opacity":1,"position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"marginRight":0,"justifyContent":"center","backfaceVisibility":"hidden","paddingTop":0,"borderWidth":0,"paddingBottom":21,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{"tap":[{"id":"bc50250a.107db8"}],"onPress":[{"id":"bc50250a.107db8"}]}},"reactClass":"Button","pageId":"page.Page3"},"1a1618c2-60dc-4804-90b4-8c9db354329d":{"id":"1a1618c2-60dc-4804-90b4-8c9db354329d","props":{"contextPropTypes":["visible","data","styles","animationsConfig","label","disabled"],"label":"Submit","visible":true,"disabled":false,"flowGroupId":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d","styles":{"text":{"color":"rgb(255, 255, 255)","fontSize":18,"fontFamily":"Open Sans","lineHeight":24,"textTransform":"none","fontStyle":"normal","textAlign":"center","borderWidth":0,"borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0},"button":{"marginTop":8,"minHeight":56,"borderWidth":0,"paddingLeft":8,"shadowColor":"rgba(36, 36, 38, 0.25)","borderRadius":3,"marginBottom":8,"paddingRight":8,"shadowRadius":7,"backgroundColor":"#1b8dec","shadowOffset":{"width":0,"height":4},"shadowOpacity":0,"display":"flex","opacity":1,"position":"relative","alignSelf":"auto","alignItems":"stretch","marginLeft":0,"paddingTop":0,"marginRight":0,"paddingBottom":0,"justifyContent":"center","backfaceVisibility":"hidden","borderRightWidth":0,"borderLeftWidth":0,"borderTopWidth":0,"borderBottomWidth":0}},"dynamicProps":[],"expressionProps":[],"events":{"tap":[{"id":"4bee705a.2af47"}],"onPress":[{"id":"4bee705a.2af47"}]}},"reactClass":"Button","pageId":"page.Page3"}},"expressions":{},"flows":[{"x":420,"y":50,"z":"own_1d6d336a.9126c","id":"10544d20.64c85","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@1ed52ea2.56495","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_8c38c143.8847e","id":"11448d84.84e18","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"pickedDate":{"key":"pickedDate@@@1d26a8c5.4b053","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_bd0c25ba.5aaf3","id":"1182b19b.3b257","func":"const {\\n  title,\\n  message,\\n  dismissLabel,\\n  supersonic,\\n} = inputs;\\n\\nawait supersonic.api.alert.show({\\n  title,\\n  message,\\n  buttonTitle: dismissLabel,\\n});","name":"Alert","type":"function2","noerr":0,"wires":[["d12b40e5.694bb"]],"outputs":1,"function_inputs":{"key":{"title":{"key":"title","source":"input"},"message":{"key":"message","source":"input"},"supersonic":{"key":"supersonic","source":"msg"},"dismissLabel":{"key":"dismissLabel","source":"input"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":210,"y":40,"z":"own_23268044.e1e2b","id":"12488c73.5bfa4","func":"const { variable, supersonic, contextId } = inputs;\\nconst { reference, value } = variable;\\nawait supersonic.context.setPageVariable(reference, value, contextId);","name":"Set page variable","type":"function2","noerr":0,"wires":[["1e52f98a.20216"]],"outputs":1,"function_inputs":{"key":{"variable":{"key":"variable","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_8fe6bea6.1072","id":"1333ac45.8009c","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@6afc87de.47ec9","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_8c38c143.8847e","id":"143f182b.61fe3","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_97b54227.3b127","id":"147f90f1.617fe","func":"const {\\n  time,\\n  unit,\\n} = msg;\\n\\nconst unitCoefficientMap = {\\n  ms: 1,\\n  s: 1000,\\n  min: 1000 * 60,\\n  h: 1000 * 60 * 60,\\n};\\n\\nif (time <= 0) {\\n  return msg;\\n}\\n\\nconst timeToWait = time * unitCoefficientMap[unit];\\n\\nif (supersonic.api.delay) {\\n  supersonic.api.delay(() => { node.send(msg); }, timeToWait, msg.contextId);\\n} else {\\n  setTimeout(() => {\\n    node.send(msg);\\n  }, timeToWait);\\n}","name":"Delay","type":"function","noerr":0,"wires":[[]],"outputs":1},{"x":420,"y":50,"z":"own_105ec0bb.2f7d7","id":"15f7596e.557a0","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_d51109f.3b25d","id":"19b93bf3.89208","func":"const { request, contextId, supersonic } = inputs;\\nconst { resourceName, id, parameters = {} } = request;\\n\\nconst { getComponentContextProp } = supersonic.context;\\nconst { getResourceConfig } = supersonic.api.data;\\n\\nconst get = (p, o) => {\\n  const isNumber = (v) => typeof v === \'number\';\\n  const isBoolean = (v) => typeof v === \'boolean\';\\n  const isNull = (v) => v === null;\\n  const isString = (v) => typeof v === \'string\';\\n  return p.reduce((xs, x) => (\\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\\n  ), o);\\n};\\n\\nconst importRecord = (record, mappingFields = []) => {\\n  const importedData = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      const value = get(field.mapping, record);\\n      if (value !== undefined) {\\n        importedData[field.propertyName] = value;\\n      }\\n    }\\n  });\\n  return importedData;\\n};\\n\\nconst adapterPrefix = \'adapter\';\\nconst [prefix, boundResource] = (resourceName || \'\').split(\':\');\\nconst isAdapter = prefix === adapterPrefix;\\n\\nconst getActualResourceName = () => {\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    return (\\n      get([\'mapping\', \'value\'], adapterProp) || get([\'value\'], adapterProp) || resourceName\\n    );\\n  }\\n  return resourceName;\\n};\\n\\nconst getMapping = () => (\\n  isAdapter\\n    ? get([\'mapping\', \'fields\'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\\n    : null\\n);\\n\\nconst getAdapterFields = () => {\\n  const adapterFields = {};\\n  const fields = [\'identifier\'];\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    fields.forEach((field) => {\\n      adapterFields[field] = get([\'mapping\', field], adapterProp) || get([field], adapterProp);\\n    });\\n  }\\n  return adapterFields;\\n};\\n\\n// TODO: should be handled in odata driver in a future version of\\n// api-configurator using string schema format field set to \\"uuid\\"\\nconst uuidMatcher = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\\nconst fixIdentifierValue = (value) => (value && typeof value === \'string\' && !uuidMatcher.test(value) ? `\'${value}\'` : value);\\nconst prepareQuery = (query, resourceType) => {\\n  if (resourceType === \'odata\' && query.identifier && Object.keys(query.identifier).length > 1) {\\n    return { ...query, identifier: Object.keys(query.identifier).reduce((acc, key) => ({ ...acc, [key]: fixIdentifierValue(query.identifier[key]) }), {}) };\\n  }\\n  return query;\\n};\\n\\nconst mappingFields = getMapping(resourceName);\\nconst isMappedAdapter = isAdapter && !!mappingFields;\\n\\nasync function makeRequest() {\\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\\n  const { driverConfiguration = {} } = resourceConfig;\\n  const resourceType = resourceConfig.type || driverConfiguration.type;\\n\\n  if (!resourceConfig) {\\n    // This is assumed to be a legacy data resource\\n    const data = await supersonic.resource.find(resourceName, id, {});\\n    return data && data.value && data.value.object;\\n  }\\n  // Load a local data resource\\n  if (resourceType === \'local\') {\\n    const { appId } = await supersonic.api.app.getAppId();\\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\\n    if (record != null && typeof record === \'object\' && typeof record.id !== \'undefined\') {\\n      return record;\\n    }\\n    throw new Error(`Record ${resourceName} with ID ${id} not found`);\\n  }\\n  if (resourceType === \'agdb\') {\\n    const data = await supersonic.resource.find(resourceConfig.agdb_id, id, {});\\n    return data && data.value && data.value.object;\\n  }\\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\\n    const driver = supersonic.api.data.drivers[resourceType];\\n    if (!driver.execute) {\\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\\n    }\\n    let authConfig;\\n    if (resourceType === \'firestore\') {\\n      try {\\n        const { firebase } = supersonic.api;\\n        const currentUser = await new Promise((resolve, reject) => {\\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\\n            unsubscribe();\\n            resolve(user);\\n          }, reject);\\n        });\\n        const token = await currentUser.getIdToken();\\n        authConfig = {\\n          type: \'bearer\',\\n          authToken: token,\\n        };\\n      } catch (err) {\\n        /* ignore error and attempt query anyway */\\n      }\\n    }\\n    const agQuery = prepareQuery({\\n      resource: resourceConfig,\\n      operation: \'retrieve\',\\n      authConfig,\\n      ...request,\\n      ...getAdapterFields(),\\n    }, resourceType);\\n    const response = await driver.execute(agQuery);\\n    if (!response || response.message) {\\n      if (resourceType === \'firestore\') {\\n        let code; let message; let status;\\n        try {\\n          ({ code, message, status } = response.driverRawError.response.data.error);\\n        } catch (e) {\\n          message = response.message;\\n        }\\n        // eslint-disable-next-line no-throw-literal\\n        throw {\\n          type: \'firestore\',\\n          code,\\n          message,\\n          status,\\n        };\\n      }\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n    const record = response.record || response.data || null;\\n    return record;\\n  }\\n  // Load a \\"REST\\" data resource\\n  const operation = resourceConfig.operations.retrieve;\\n  if (!operation) {\\n    throw new Error(`Resource ${resourceName} does not support getting a single record`);\\n  }\\n  const requestParameters = [\\n    ...resourceConfig.parameters,\\n    ...operation.parameters,\\n  ];\\n  const headers = {};\\n  const queryComponents = [];\\n  let url = `${resourceConfig.base_url}${operation.relative_path || \'\'}`;\\n  requestParameters.forEach((parameter) => {\\n    let value = parameters[parameter.id];\\n    if (parameter.is_static || typeof value === \'undefined\') {\\n      value = parameter.default;\\n    }\\n    if (value == null) {\\n    // No value for this parameter\\n      if (parameter.is_optional) {\\n        return;\\n      }\\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\\n    }\\n    // Map the parameter to headers/URL/query\\n    const { placement } = parameter;\\n    const placementKey = parameter.placement_key;\\n    if (placement === \'header\') {\\n      // Add to headers\\n      headers[placementKey] = value;\\n    } else if (placement === \'query\') {\\n      // Add to the URL as a query parameter\\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\\n    } else if (placement === \'path\') {\\n      // Replace the placeholder in the URL with escaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), encodeURIComponent(String(value)));\\n    } else if (placement === \'url\') {\\n      // Replace the placeholder in the URL with unescaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), String(value));\\n    }\\n  });\\n  // Add any query parameters to the URL\\n  if (queryComponents.length) {\\n    const newQuery = queryComponents.join(\'&\');\\n    url = url.replace(/(?:\\\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\\n  }\\n  // Perform the request\\n  const response = await fetch(url, { method: \'GET\', headers });\\n  if (!response.ok) {\\n    throw response;\\n  }\\n  let result = await response.json();\\n  const resultPath = operation.response_key_path ? operation.response_key_path.split(\'.\') : [];\\n  while (result != null && resultPath.length) {\\n    result = result[resultPath.shift()];\\n  }\\n  if (!result) {\\n    throw new Error(`A ${resourceName} record not found from the response!`);\\n  }\\n  return result;\\n}\\n\\ntry {\\n  const record = await makeRequest();\\n  if (Array.isArray(record)) {\\n    const errorStr = \'The server responded with a list for a single data record. The response must be an object.\';\\n    return [1, {\\n      error: {\\n        code: \'responseMustBeObject\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: new Error(errorStr),\\n      },\\n    }];\\n  }\\n\\n  return [0, { record: !isMappedAdapter ? record : importRecord(record, mappingFields) }];\\n} catch (error) {\\n  // eslint-disable-next-line no-console\\n  // console.warn(error);\\n  if (error.type === \'firestore\') {\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.code,\\n        message: `${error.status}: ${error.message}`,\\n      },\\n    }];\\n  }\\n\\n  let errorStr = String(error);\\n\\n  if (errorStr.startsWith(\'Error: Couldn\\\\\'t find data resource\')) {\\n    return [1, {\\n      error: {\\n        code: \'resourceNotFound\',\\n        status: 404,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  if (errorStr === \'TypeError: Failed to fetch\') {\\n    errorStr += \'. Does the server allow CORS?\';\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  } if (!error.json) {\\n    return [1, {\\n      error: {\\n        code: \'unknown\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  let rawError;\\n  try {\\n    const body = await error.json();\\n    rawError = body;\\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\\n  } catch {\\n    errorStr = \'Non-JSON error body.\';\\n    rawError = { message: errorStr };\\n  } finally {\\n    // eslint-disable-next-line no-unsafe-finally\\n    return [1, {\\n      error: {\\n        code: \'serverError\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError,\\n      },\\n    }];\\n  }\\n}","name":"Get record","type":"function2","noerr":0,"wires":[["c55913f3.8d802"],["731bd1e9.4983c"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"record":{"name":"record","type":"dataResourceRetrieveResponse","title":"Record","description":"The successfully retrieved record."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown","responseMustBeObject"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while fetching the record.\\n- `responseMustBeObject`: Thrown if the server does not return an object as a response for a single data record request."}},"additionalProperties":false}]},{"x":420,"y":100,"z":"own_21057d66.1a85e","id":"1b4bfc12.808a7","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@441d4b92.6ac8d","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_100f5064.6f140","id":"1c88f5a9.1d6dc","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@f0bf1a1a.10aa3","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_8c38c143.8847e","id":"1d26a8c5.4b053","func":"const {\\n  initialDate,\\n  confirmLabel,\\n  cancelLabel,\\n  minDate,\\n  maxDate,\\n  supersonic,\\n} = inputs;\\n\\ntry {\\n  const res = await supersonic.api.datePicker.show({\\n    value: initialDate,\\n    confirmBtnText: confirmLabel,\\n    cancelBtnText: cancelLabel,\\n    mode: \'date\',\\n    minDate,\\n    maxDate,\\n    format: \'YYYY-MM-DD\',\\n  });\\n  if (res.didCancel) {\\n    return [1];\\n  }\\n  return [0, { pickedDate: res.datetime }];\\n} catch (error) {\\n  return [2, {\\n    error: {\\n      code: \'unknown\',\\n      message: \'Unknown error occurred while picking a date.\',\\n      rawError: error,\\n    },\\n  }];\\n}","name":"Pick date","type":"function2","noerr":0,"wires":[["11448d84.84e18"],["143f182b.61fe3"],["22694950.7ebb2"]],"outputs":3,"function_inputs":{"key":{"maxDate":{"key":"maxDate","source":"input"},"minDate":{"key":"minDate","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"},"cancelLabel":{"key":"cancelLabel","source":"input"},"initialDate":{"key":"initialDate","source":"input"},"confirmLabel":{"key":"confirmLabel","source":"input"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"pickedDate":{"name":"pickedDate","type":"string","title":"Picked date","description":"Picked date as an ISO 8601 format string, e.g. `2019-10-03`."}},"additionalProperties":false},{"type":"object","properties":{},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `unknown`: Thrown if an unknown error occurred while picking a date."}},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_23268044.e1e2b","id":"1e52f98a.20216","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_91f3e62e.3f65c","id":"1eb859fe.2c9fd","func":"const { supersonic, contextId } = inputs;\\nawait supersonic.api.spinner.hide(contextId);","name":"Hide spinner","type":"function2","noerr":0,"wires":[["2efe9993.2abdf"]],"outputs":1,"function_inputs":{"key":{"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":210,"y":40,"z":"own_1d6d336a.9126c","id":"1ed52ea2.56495","func":"const { request, contextId, supersonic } = inputs;\\nconst { resourceName, properties = {}, parameters = {} } = request;\\n\\nconst { getComponentContextProp } = supersonic.context;\\nconst { getResourceConfig } = supersonic.api.data;\\n\\nconst get = (p, o) => {\\n  const isNumber = (v) => typeof v === \'number\';\\n  const isBoolean = (v) => typeof v === \'boolean\';\\n  const isNull = (v) => v === null;\\n  const isString = (v) => typeof v === \'string\';\\n  return p.reduce((xs, x) => (\\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\\n  ), o);\\n};\\n\\nconst importRecord = (record, mappingFields = []) => {\\n  const importedData = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      const value = get(field.mapping, record);\\n      if (value !== undefined) {\\n        importedData[field.propertyName] = value;\\n      }\\n    }\\n  });\\n  return importedData;\\n};\\n\\nconst setNestedProp = (obj = {}, [first, ...rest], value) => ({\\n  ...obj,\\n  [first]: rest.length\\n    ? setNestedProp(obj[first], rest, value)\\n    : value,\\n});\\n\\nconst exportRecord = (record, mappingFields = []) => {\\n  let exportedRecord = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      exportedRecord = setNestedProp(exportedRecord, field.mapping, get([field.propertyName], record));\\n    }\\n  });\\n  return exportedRecord;\\n};\\n\\nconst exportResourceConfig = (resourceConfig, mappingFields) => {\\n  const exportedResourceConfig = { ...resourceConfig };\\n  if (resourceConfig.record) {\\n    exportedResourceConfig.record = exportRecord(resourceConfig.record, mappingFields);\\n  }\\n  return exportedResourceConfig;\\n};\\n\\nconst adapterPrefix = \'adapter\';\\nconst [prefix, boundResource] = (resourceName || \'\').split(\':\');\\nconst isAdapter = prefix === adapterPrefix;\\n\\nconst getActualResourceName = () => {\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    return (\\n      get([\'mapping\', \'value\'], adapterProp) || get([\'value\'], adapterProp) || resourceName\\n    );\\n  }\\n  return resourceName;\\n};\\n\\nconst getMapping = () => (\\n  isAdapter\\n    ? get([\'mapping\', \'fields\'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\\n    : null\\n);\\n\\nconst mappingFields = getMapping(resourceName);\\nconst isMappedAdapter = isAdapter && !!mappingFields;\\n\\nasync function makeRequest() {\\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\\n  const { driverConfiguration = {} } = resourceConfig;\\n  const resourceType = resourceConfig.type || driverConfiguration.type;\\n\\n  const getTLD = () => {\\n    const environment = self.DOLAN.environment.endpoints.data;\\n    let TLD = environment.match(/.*\\\\.(.*gyver\\\\..{2,5})\\\\//)[1];\\n    if (TLD.includes(\'/\')) {\\n      TLD = TLD.substring(9, TLD.length - 3);\\n    } else {\\n      TLD = TLD.substring(9, TLD.length);\\n    }\\n    return TLD;\\n  };\\n\\n  const TLD = self.DOLAN ? getTLD() : \'\';\\n  if (!resourceConfig) {\\n    if (TLD === \'eu\' || TLD === \'black\') {\\n      throw new Error(`Couldn\'t find data resource with given name: ${resourceName}.`);\\n    }\\n    // This is assumed to be a legacy data resource\\n    const data = await supersonic.resource.create(resourceName, { object: properties });\\n    return data && data.value && data.value.object;\\n  }\\n\\n  // Create a local data resource\\n  if (resourceType === \'local\') {\\n    const { id } = properties;\\n    if (id == null) {\\n      throw new Error(`Missing ${resourceName} record ID`);\\n    }\\n    const { appId } = await supersonic.api.app.getAppId();\\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\\n    if (record != null && typeof record === \'object\' && typeof record.id !== \'undefined\') {\\n      throw new Error(`Record ${resourceName} with ID ${id} already exists`);\\n    }\\n    await supersonic.api.asyncStorage.setItem({\\n      key, data: !isMappedAdapter ? properties : exportRecord(request.record, mappingFields),\\n    });\\n    return properties;\\n  }\\n  // Create an AGDB data resource\\n  if (resourceType === \'agdb\') {\\n    const data = await supersonic.resource.create(resourceConfig.agdb_id, { object: properties });\\n    return data && data.value && data.value.object;\\n  }\\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\\n    const driver = supersonic.api.data.drivers[resourceType];\\n    if (!driver.execute) {\\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\\n    }\\n    let authConfig;\\n    if (resourceType === \'firestore\') {\\n      try {\\n        const { firebase } = supersonic.api;\\n        const currentUser = await new Promise((resolve, reject) => {\\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\\n            unsubscribe();\\n            resolve(user);\\n          }, reject);\\n        });\\n        const token = await currentUser.getIdToken();\\n        authConfig = {\\n          type: \'bearer\',\\n          authToken: token,\\n        };\\n      } catch (err) {\\n        /* ignore error and attempt query anyway */\\n      }\\n    }\\n    let agQuery = {\\n      resource: resourceConfig,\\n      operation: \'create\',\\n      authConfig,\\n      ...request,\\n    };\\n    if (isMappedAdapter) {\\n      agQuery = exportResourceConfig(agQuery, mappingFields);\\n    }\\n    const response = await driver.execute(agQuery);\\n    if (!response || response.message) {\\n      if (resourceType === \'firestore\') {\\n        let code; let message; let status;\\n        try {\\n          ({ code, message, status } = response.driverRawError.response.data.error);\\n        } catch (e) {\\n          message = response.message;\\n        }\\n        // eslint-disable-next-line no-throw-literal\\n        throw {\\n          type: \'firestore\',\\n          code,\\n          message,\\n          status,\\n        };\\n      }\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n    const record = response.record || response.data || null;\\n    return record;\\n  }\\n  // Create a \\"REST\\" data resource\\n  const operation = resourceConfig.operations.create;\\n  if (!operation) {\\n    throw new Error(`Resource ${resourceName} does not support creating new records`);\\n  }\\n  const requestParameters = [\\n    ...resourceConfig.parameters,\\n    ...operation.parameters,\\n  ];\\n  const requestSchema = operation.request_schema;\\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === \'undefined\');\\n  const headers = isEmptyResponse ? {} : { \'Content-Type\': \'application/json\' };\\n  const body = isEmptyResponse ? undefined\\n    : JSON.stringify(!isMappedAdapter ? properties : exportRecord(request.record, mappingFields));\\n  const queryComponents = [];\\n  let url = `${resourceConfig.base_url}${operation.relative_path || \'\'}`;\\n  requestParameters.forEach((parameter) => {\\n    let value = parameters[parameter.id];\\n    if (parameter.is_static || typeof value === \'undefined\') {\\n      value = parameter.default;\\n    }\\n    if (value == null) {\\n    // No value for this parameter\\n      if (parameter.is_optional) {\\n        return;\\n      }\\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\\n    }\\n    // Map the parameter to headers/URL/query\\n    const { placement } = parameter;\\n    const placementKey = parameter.placement_key;\\n    if (placement === \'header\') {\\n      // Add to headers\\n      headers[placementKey] = value;\\n    } else if (placement === \'query\') {\\n      // Add to the URL as a query parameter\\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\\n    } else if (placement === \'path\') {\\n      // Replace the placeholder in the URL with escaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), encodeURIComponent(String(value)));\\n    } else if (placement === \'url\') {\\n      // Replace the placeholder in the URL with unescaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), String(value));\\n    }\\n  });\\n  // Add any query parameters to the URL\\n  if (queryComponents.length) {\\n    const newQuery = queryComponents.join(\'&\');\\n    url = url.replace(/(?:\\\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\\n  }\\n  // Perform the request\\n  const response = await fetch(url, { method: \'POST\', headers, body });\\n  if (!response.ok) {\\n    throw response;\\n  }\\n  let result;\\n  try {\\n    result = await response.json();\\n  } catch (e) {\\n    result = null;\\n  }\\n  const resultPath = operation.response_key_path ? operation.response_key_path.split(\'.\') : [];\\n  while (result != null && resultPath.length) {\\n    result = result[resultPath.shift()];\\n  }\\n  return result;\\n}\\n\\ntry {\\n  const response = await makeRequest();\\n  return [0, { response: !isMappedAdapter ? response : importRecord(response, mappingFields) }];\\n} catch (error) {\\n  // eslint-disable-next-line no-console\\n  // console.warn(error);\\n  if (error.type === \'firestore\') {\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.code,\\n        message: `${error.status}: ${error.message}`,\\n      },\\n    }];\\n  }\\n\\n  let errorStr = String(error);\\n\\n  if (errorStr.startsWith(\'Error: Couldn\\\\\'t find data resource\')) {\\n    return [1, {\\n      error: {\\n        code: \'resourceNotFound\',\\n        status: 404,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n\\n  if (errorStr === \'TypeError: Failed to fetch\') {\\n    errorStr += \'. Does the server allow CORS?\';\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  } if (!error.json) {\\n    return [1, {\\n      error: {\\n        code: \'unknown\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  let rawError;\\n  try {\\n    const body = await error.json();\\n    rawError = body;\\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\\n  } catch {\\n    errorStr = \'Non-JSON error body.\';\\n    rawError = { message: errorStr };\\n  } finally {\\n    // eslint-disable-next-line no-unsafe-finally\\n    return [1, {\\n      error: {\\n        code: \'serverError\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError,\\n      },\\n    }];\\n  }\\n}","name":"Create record","type":"function2","noerr":0,"wires":[["10544d20.64c85"],["ca3c4967.8fc25"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceCreateResponse","title":"Response","description":"Response returned by the data resource after the record is successfully created."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while creating the record."}},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_100f5064.6f140","id":"1fe9fc4d.4458c","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"records":{"key":"records@@@f0bf1a1a.10aa3","source":"node"}},"source":"object"}},{"x":420,"y":150,"z":"own_8c38c143.8847e","id":"22694950.7ebb2","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@1d26a8c5.4b053","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_91f3e62e.3f65c","id":"2efe9993.2abdf","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_21057d66.1a85e","id":"441d4b92.6ac8d","func":"const { request, contextId, supersonic } = inputs;\\nconst {\\n  resourceName,\\n  id,\\n  properties = {},\\n  parameters = {},\\n} = request;\\n\\nconst { getComponentContextProp } = supersonic.context;\\nconst { getResourceConfig } = supersonic.api.data;\\n\\nconst get = (p, o) => {\\n  const isNumber = (v) => typeof v === \'number\';\\n  const isBoolean = (v) => typeof v === \'boolean\';\\n  const isNull = (v) => v === null;\\n  const isString = (v) => typeof v === \'string\';\\n  return p.reduce((xs, x) => (\\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\\n  ), o);\\n};\\n\\nconst importRecord = (record, mappingFields = []) => {\\n  const importedData = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      const value = get(field.mapping, record);\\n      if (value !== undefined) {\\n        importedData[field.propertyName] = value;\\n      }\\n    }\\n  });\\n  return importedData;\\n};\\n\\nconst setNestedProp = (obj = {}, [first, ...rest], value) => ({\\n  ...obj,\\n  [first]: rest.length\\n    ? setNestedProp(obj[first], rest, value)\\n    : value,\\n});\\n\\nconst exportRecord = (record, mappingFields = []) => {\\n  let exportedRecord = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      exportedRecord = setNestedProp(exportedRecord, field.mapping, get([field.propertyName], record));\\n    }\\n  });\\n  return exportedRecord;\\n};\\n\\nconst exportResourceConfig = (resourceConfig, mappingFields) => {\\n  const exportedResourceConfig = { ...resourceConfig };\\n  if (resourceConfig.record) {\\n    exportedResourceConfig.record = exportRecord(resourceConfig.record, mappingFields);\\n  }\\n  return exportedResourceConfig;\\n};\\n\\nconst adapterPrefix = \'adapter\';\\nconst [prefix, boundResource] = (resourceName || \'\').split(\':\');\\nconst isAdapter = prefix === adapterPrefix;\\n\\nconst getActualResourceName = () => {\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    return (\\n      get([\'mapping\', \'value\'], adapterProp) || get([\'value\'], adapterProp) || resourceName\\n    );\\n  }\\n  return resourceName;\\n};\\n\\nconst getMapping = () => (\\n  isAdapter\\n    ? get([\'mapping\', \'fields\'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\\n    : null\\n);\\n\\nconst getAdapterFields = () => {\\n  const adapterFields = {};\\n  const fields = [\'identifier\'];\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    fields.forEach((field) => {\\n      adapterFields[field] = get([\'mapping\', field], adapterProp) || get([field], adapterProp);\\n    });\\n  }\\n  return adapterFields;\\n};\\n\\n// TODO: should be handled in odata driver in a future version of\\n// api-configurator using string schema format field set to \\"uuid\\"\\nconst uuidMatcher = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\\nconst fixIdentifierValue = (value) => (value && typeof value === \'string\' && !uuidMatcher.test(value) ? `\'${value}\'` : value);\\nconst prepareQuery = (query, resourceType) => {\\n  if (resourceType === \'odata\' && query.identifier && Object.keys(query.identifier).length > 1) {\\n    return { ...query, identifier: Object.keys(query.identifier).reduce((acc, key) => ({ ...acc, [key]: fixIdentifierValue(query.identifier[key]) }), {}) };\\n  }\\n  return query;\\n};\\n\\nconst mappingFields = getMapping(resourceName);\\nconst isMappedAdapter = isAdapter && !!mappingFields;\\n\\nasync function makeRequest() {\\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\\n  const { driverConfiguration = {} } = resourceConfig;\\n  const resourceType = resourceConfig.type || driverConfiguration.type;\\n\\n  const getTLD = () => {\\n    const environment = self.DOLAN.environment.endpoints.data;\\n    let TLD = environment.match(/.*\\\\.(.*gyver\\\\..{2,5})\\\\//)[1];\\n    if (TLD.includes(\'/\')) {\\n      TLD = TLD.substring(9, TLD.length - 3);\\n    } else {\\n      TLD = TLD.substring(9, TLD.length);\\n    }\\n    return TLD;\\n  };\\n\\n  const TLD = self.DOLAN ? getTLD() : \'\';\\n  if (!resourceConfig) {\\n    if (TLD === \'eu\' || TLD === \'black\') {\\n      throw new Error(`Couldn\'t find data resource with given name: ${resourceName}.`);\\n    }\\n    // This is assumed to be a legacy data resource\\n    const data = await supersonic.resource.update(resourceName, { object: properties }, id);\\n    return data && data.value && data.value.object;\\n  }\\n\\n  if (resourceType === \'agdb\') {\\n    const data = await supersonic.resource.update(resourceConfig.agdb_id, { object: properties }, id);\\n    return data && data.value && data.value.object;\\n  }\\n  // Update a local data resource\\n  if (resourceType === \'local\') {\\n    if (id == null) {\\n      throw new Error(`Missing ${resourceName} record ID`);\\n    }\\n    // Omit the \'id\' from the properties in case it has it\\n    const updatedProperties = { ...properties };\\n    delete updatedProperties.id;\\n    const { appId } = await supersonic.api.app.getAppId();\\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\\n    const { data: record } = await supersonic.api.asyncStorage.getItem({ key });\\n    if (record == null || typeof record !== \'object\' || typeof record.id === \'undefined\') {\\n      throw new Error(`Record ${resourceName} with ID ${id} does not exist`);\\n    }\\n    const updatedRecord = { ...record, ...updatedProperties };\\n    await supersonic.api.asyncStorage.setItem({ key, data: updatedRecord });\\n    return updatedRecord;\\n  }\\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\\n    const driver = supersonic.api.data.drivers[resourceType];\\n    if (!driver.execute) {\\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\\n    }\\n    let authConfig;\\n    if (resourceType === \'firestore\') {\\n      try {\\n        const { firebase } = supersonic.api;\\n        const currentUser = await new Promise((resolve, reject) => {\\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\\n            unsubscribe();\\n            resolve(user);\\n          }, reject);\\n        });\\n        const token = await currentUser.getIdToken();\\n        authConfig = {\\n          type: \'bearer\',\\n          authToken: token,\\n        };\\n      } catch (err) {\\n        /* ignore error and attempt query anyway */\\n      }\\n    }\\n    let agQuery = prepareQuery({\\n      resource: resourceConfig,\\n      operation: \'update\',\\n      authConfig,\\n      ...request,\\n      ...getAdapterFields(),\\n    }, resourceType);\\n    if (isMappedAdapter) {\\n      agQuery = exportResourceConfig(agQuery, mappingFields);\\n    }\\n    const response = await driver.execute(agQuery);\\n    if (!response || response.message) {\\n      if (resourceType === \'firestore\') {\\n        let code; let message; let status;\\n        try {\\n          ({ code, message, status } = response.driverRawError.response.data.error);\\n        } catch (e) {\\n          message = response.message;\\n        }\\n        // eslint-disable-next-line no-throw-literal\\n        throw {\\n          type: \'firestore\',\\n          code,\\n          message,\\n          status,\\n        };\\n      }\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n    const record = response.record || response.data || null;\\n    return record;\\n  }\\n  // Update a \\"REST\\" data resource\\n  const operation = resourceConfig.operations.replace;\\n  if (!operation) {\\n    throw new Error(`Resource ${resourceName} does not support updating records`);\\n  }\\n  const requestParameters = [\\n    ...resourceConfig.parameters,\\n    ...operation.parameters,\\n  ];\\n  const requestSchema = operation.request_schema;\\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === \'undefined\');\\n  const headers = isEmptyResponse ? {} : { \'Content-Type\': \'application/json\' };\\n  const body = isEmptyResponse ? undefined : JSON.stringify(properties);\\n  const queryComponents = [];\\n  let url = `${resourceConfig.base_url}${operation.relative_path || \'\'}`;\\n  requestParameters.forEach((parameter) => {\\n    let value = parameters[parameter.id];\\n    if (parameter.is_static || typeof value === \'undefined\') {\\n      value = parameter.default;\\n    }\\n    if (value == null) {\\n    // No value for this parameter\\n      if (parameter.is_optional) {\\n        return;\\n      }\\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\\n    }\\n    // Map the parameter to headers/URL/query\\n    const { placement } = parameter;\\n    const placementKey = parameter.placement_key;\\n    if (placement === \'header\') {\\n      // Add to headers\\n      headers[placementKey] = value;\\n    } else if (placement === \'query\') {\\n      // Add to the URL as a query parameter\\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\\n    } else if (placement === \'path\') {\\n      // Replace the placeholder in the URL with escaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), encodeURIComponent(String(value)));\\n    } else if (placement === \'url\') {\\n      // Replace the placeholder in the URL with unescaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), String(value));\\n    }\\n  });\\n  // Add any query parameters to the URL\\n  if (queryComponents.length) {\\n    const newQuery = queryComponents.join(\'&\');\\n    url = url.replace(/(?:\\\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\\n  }\\n  // Perform the request\\n  const method = operation.method || \'PUT\';\\n  const response = await fetch(url, { method, headers, body });\\n  if (!response.ok) {\\n    throw response;\\n  }\\n  let result = await response.json();\\n  const resultPath = operation.response_key_path ? operation.response_key_path.split(\'.\') : [];\\n  while (result != null && resultPath.length) {\\n    result = result[resultPath.shift()];\\n  }\\n  return result;\\n}\\n\\ntry {\\n  const response = await makeRequest();\\n  return [0, { response: !isMappedAdapter ? response : importRecord(response, mappingFields) }];\\n} catch (error) {\\n  // eslint-disable-next-line no-console\\n  // console.warn(error);\\n  if (error.type === \'firestore\') {\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.code,\\n        message: `${error.status}: ${error.message}`,\\n      },\\n    }];\\n  }\\n\\n  let errorStr = String(error);\\n\\n  if (errorStr.startsWith(\'Error: Couldn\\\\\'t find data resource\')) {\\n    return [1, {\\n      error: {\\n        code: \'resourceNotFound\',\\n        status: 404,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n\\n  if (errorStr === \'TypeError: Failed to fetch\') {\\n    errorStr += \'. Does the server allow CORS?\';\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  } if (!error.json) {\\n    return [1, {\\n      error: {\\n        code: \'unknown\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  let rawError;\\n  try {\\n    const body = await error.json();\\n    rawError = body;\\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\\n  } catch {\\n    errorStr = \'Non-JSON error body.\';\\n    rawError = { message: errorStr };\\n  } finally {\\n    // eslint-disable-next-line no-unsafe-finally\\n    return [1, {\\n      error: {\\n        code: \'serverError\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError,\\n      },\\n    }];\\n  }\\n}","name":"Update record","type":"function2","noerr":0,"wires":[["58e438b4.7c48c"],["1b4bfc12.808a7"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceReplaceResponse","title":"Response","description":"Response returned by the data resource after the record is successfully updated."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while updating the record."}},"additionalProperties":false}]},{"x":420,"y":50,"z":"own_21057d66.1a85e","id":"58e438b4.7c48c","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"response":{"key":"response@@@441d4b92.6ac8d","source":"node"}},"source":"object"}},{"x":210,"y":40,"z":"own_8fe6bea6.1072","id":"6afc87de.47ec9","func":"const { request, supersonic } = inputs;\\nconst {\\n  resourceName,\\n  properties,\\n  id,\\n  parameters = {},\\n} = request;\\n\\n// TODO: should be handled in odata driver in a future version of\\n// api-configurator using string schema format field set to \\"uuid\\"\\nconst uuidMatcher = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\\nconst fixIdentifierValue = (value) => (value && typeof value === \'string\' && !uuidMatcher.test(value) ? `\'${value}\'` : value);\\nconst prepareQuery = (query, resourceType) => {\\n  if (resourceType === \'odata\' && query.identifier && Object.keys(query.identifier).length > 1) {\\n    return { ...query, identifier: Object.keys(query.identifier).reduce((acc, key) => ({ ...acc, [key]: fixIdentifierValue(query.identifier[key]) }), {}) };\\n  }\\n  return query;\\n};\\n\\nasync function makeRequest() {\\n  const resourceConfig = supersonic.api.data.getResourceConfig(resourceName);\\n  const { driverConfiguration = {} } = resourceConfig;\\n  const resourceType = resourceConfig.type || driverConfiguration.type;\\n\\n  const getTLD = () => {\\n    const environment = self.DOLAN.environment.endpoints.data;\\n    let TLD = environment.match(/.*\\\\.(.*gyver\\\\..{2,5})\\\\//)[1];\\n    if (TLD.includes(\'/\')) {\\n      TLD = TLD.substring(9, TLD.length - 3);\\n    } else {\\n      TLD = TLD.substring(9, TLD.length);\\n    }\\n    return TLD;\\n  };\\n\\n  const TLD = self.DOLAN ? getTLD() : \'\';\\n  if (!resourceConfig) {\\n    if (TLD === \'eu\' || TLD === \'black\') {\\n      throw new Error(`Couldn\'t find data resource with given name: ${resourceName}.`);\\n    }\\n    // This is assumed to be a legacy data resource\\n    await supersonic.resource.remove(resourceName, id);\\n    return {};\\n  }\\n  // Delete a local data resource\\n  if (resourceType === \'local\') {\\n    if (id == null) {\\n      throw new Error(`Missing ${resourceName} record ID`);\\n    }\\n    const { appId } = await supersonic.api.app.getAppId();\\n    const key = `local-resource:${appId}:${resourceName}:${id}`;\\n    await supersonic.api.asyncStorage.removeItem({ key });\\n    return {};\\n  }\\n  if (resourceType === \'agdb\') {\\n    const data = await supersonic.resource.remove(resourceConfig.agdb_id, id);\\n    return data && data.value && data.value.object;\\n  }\\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\\n    const driver = supersonic.api.data.drivers[resourceType];\\n    if (!driver.execute) {\\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\\n    }\\n    let authConfig;\\n    if (resourceType === \'firestore\') {\\n      try {\\n        const { firebase } = supersonic.api;\\n        const currentUser = await new Promise((resolve, reject) => {\\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\\n            unsubscribe();\\n            resolve(user);\\n          }, reject);\\n        });\\n        const token = await currentUser.getIdToken();\\n        authConfig = {\\n          type: \'bearer\',\\n          authToken: token,\\n        };\\n      } catch (err) {\\n        /* ignore error and attempt query anyway */\\n      }\\n    }\\n    const agQuery = prepareQuery({\\n      resource: resourceConfig,\\n      operation: \'delete\',\\n      authConfig,\\n      ...request,\\n    }, resourceType);\\n    const response = await driver.execute(agQuery);\\n    if (!response || response.message) {\\n      if (resourceType === \'firestore\') {\\n        let code; let message; let status;\\n        try {\\n          ({ code, message, status } = response.driverRawError.response.data.error);\\n        } catch (e) {\\n          message = response.message;\\n        }\\n        // eslint-disable-next-line no-throw-literal\\n        throw {\\n          type: \'firestore\',\\n          code,\\n          message,\\n          status,\\n        };\\n      }\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n    const record = response.record || response.data || null;\\n    return record;\\n  }\\n  // Delete a \\"REST\\" data resource\\n  const operation = resourceConfig.operations.delete;\\n  if (!operation) {\\n    throw new Error(`Resource ${resourceName} does not support deleting records`);\\n  }\\n  const requestParameters = [\\n    ...resourceConfig.parameters,\\n    ...operation.parameters,\\n  ];\\n  const requestSchema = operation.request_schema;\\n  const isEmptyResponse = !properties || (requestSchema != null && requestSchema.type === \'undefined\');\\n  const headers = isEmptyResponse ? {} : { \'Content-Type\': \'application/json\' };\\n  const body = isEmptyResponse ? undefined : JSON.stringify(properties);\\n  const queryComponents = [];\\n  let url = `${resourceConfig.base_url}${operation.relative_path || \'\'}`;\\n  requestParameters.forEach((parameter) => {\\n    let value = parameters[parameter.id];\\n    if (parameter.is_static || typeof value === \'undefined\') {\\n      value = parameter.default;\\n    }\\n    if (value == null) {\\n      // No value for this parameter\\n      if (parameter.is_optional) {\\n        return;\\n      }\\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\\n    }\\n    // Map the parameter to headers/URL/query\\n    const { placement } = parameter;\\n    const placementKey = parameter.placement_key;\\n    if (placement === \'header\') {\\n      // Add to headers\\n      headers[placementKey] = value;\\n    } else if (placement === \'query\') {\\n      // Add to the URL as a query parameter\\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\\n    } else if (placement === \'path\') {\\n      // Replace the placeholder in the URL with escaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), encodeURIComponent(String(value)));\\n    } else if (placement === \'url\') {\\n      // Replace the placeholder in the URL with unescaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), String(value));\\n    }\\n  });\\n  // Add any query parameters to the URL\\n  if (queryComponents.length) {\\n    const newQuery = queryComponents.join(\'&\');\\n    url = url.replace(/(?:\\\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\\n  }\\n  // Perform the request\\n  const response = await fetch(url, { method: \'DELETE\', headers, body });\\n  if (!response.ok) {\\n    throw response;\\n  }\\n  let result;\\n  try {\\n    result = await response.json();\\n  } catch (error) {\\n    result = {};\\n  }\\n  const resultPath = operation.response_key_path ? operation.response_key_path.split(\'.\') : [];\\n  while (result != null && resultPath.length) {\\n    result = result[resultPath.shift()];\\n  }\\n  return result;\\n}\\n\\ntry {\\n  const response = await makeRequest();\\n  return [0, { response }];\\n} catch (error) {\\n  // eslint-disable-next-line no-console\\n  // console.warn(error);\\n  if (error.type === \'firestore\') {\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.code,\\n        message: `${error.status}: ${error.message}`,\\n      },\\n    }];\\n  }\\n\\n  let errorStr = String(error);\\n\\n  if (errorStr.startsWith(\'Error: Couldn\\\\\'t find data resource\')) {\\n    return [1, {\\n      error: {\\n        code: \'resourceNotFound\',\\n        status: 404,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n\\n  if (errorStr === \'TypeError: Failed to fetch\') {\\n    errorStr += \'. Does the server allow CORS?\';\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  } if (!error.json) {\\n    return [1, {\\n      error: {\\n        code: \'unknown\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  let rawError;\\n  try {\\n    const body = await error.json();\\n    rawError = body;\\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\\n  } catch {\\n    errorStr = \'Non-JSON error body.\';\\n    rawError = { message: errorStr };\\n  } finally {\\n    // eslint-disable-next-line no-unsafe-finally\\n    return [1, {\\n      error: {\\n        code: \'serverError\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError,\\n      },\\n    }];\\n  }\\n}","name":"Delete record","type":"function2","noerr":0,"wires":[["1333ac45.8009c"],["6b1b3c9b.2009a"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceDeleteResponse","title":"Response","description":"Response returned by the data resource after the record is successfully deleted."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while deleting the record."}},"additionalProperties":false}]},{"x":420,"y":100,"z":"own_8fe6bea6.1072","id":"6b1b3c9b.2009a","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@6afc87de.47ec9","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_d51109f.3b25d","id":"731bd1e9.4983c","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@19b93bf3.89208","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_d51109f.3b25d","id":"c55913f3.8d802","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"record":{"key":"record@@@19b93bf3.89208","source":"node"}},"source":"object"}},{"x":420,"y":100,"z":"own_1d6d336a.9126c","id":"ca3c4967.8fc25","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{"error":{"key":"error@@@1ed52ea2.56495","source":"node"}},"source":"object"}},{"x":420,"y":50,"z":"own_bd0c25ba.5aaf3","id":"d12b40e5.694bb","name":"","type":"set-subflow-output","wires":[[]],"subflow_output":{"key":{},"source":"object"}},{"x":210,"y":40,"z":"own_105ec0bb.2f7d7","id":"dd5da27b.11c99","func":"const { assignment, supersonic, contextId } = inputs;\\nconst { reference, data } = assignment || {};\\nawait supersonic.context.setDataReference(reference, data, true, contextId);","name":"Set data variable","type":"function2","noerr":0,"wires":[["15f7596e.557a0"]],"outputs":1,"function_inputs":{"key":{"contextId":{"key":"contextId","source":"msg"},"assignment":{"key":"assignment","source":"input"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{},"additionalProperties":false}]},{"x":210,"y":40,"z":"own_100f5064.6f140","id":"f0bf1a1a.10aa3","func":"const { request, contextId, supersonic } = inputs;\\nconst { resourceName, parameters = {} } = request;\\n\\nconst { getComponentContextProp } = supersonic.context;\\nconst { getResourceConfig } = supersonic.api.data;\\n\\nconst get = (p, o) => {\\n  const isNumber = (v) => typeof v === \'number\';\\n  const isBoolean = (v) => typeof v === \'boolean\';\\n  const isNull = (v) => v === null;\\n  const isString = (v) => typeof v === \'string\';\\n  return p.reduce((xs, x) => (\\n    xs && (xs[x] || isNumber(xs[x]) || isBoolean(xs[x]) || isNull(xs[x]) || isString(xs[x])) ? xs[x] : undefined\\n  ), o);\\n};\\n\\nconst importRecord = (record, mappingFields = []) => {\\n  const importedData = {};\\n  mappingFields.forEach((field) => {\\n    if (field && field.mapping && field.mapping.length) {\\n      const value = get(field.mapping, record);\\n      if (value !== undefined) {\\n        importedData[field.propertyName] = value;\\n      }\\n    }\\n  });\\n  return importedData;\\n};\\nconst adapterPrefix = \'adapter\';\\nconst [prefix, boundResource] = (resourceName || \'\').split(\':\');\\nconst isAdapter = prefix === adapterPrefix;\\n\\nconst getActualResourceName = () => {\\n  if (isAdapter) {\\n    const adapterProp = getComponentContextProp(contextId.rootContextId, boundResource, contextId, true);\\n    return (\\n      get([\'mapping\', \'value\'], adapterProp) || get([\'value\'], adapterProp) || resourceName\\n    );\\n  }\\n  return resourceName;\\n};\\n\\nconst getMapping = () => (\\n  isAdapter\\n    ? get([\'mapping\', \'fields\'], getComponentContextProp(contextId.rootContextId, boundResource, contextId, true))\\n    : null\\n);\\n\\nconst mappingFields = getMapping(resourceName);\\nconst isMappedAdapter = isAdapter && !!mappingFields;\\n\\nasync function makeRequest() {\\n  const resourceConfig = getResourceConfig(getActualResourceName(resourceName));\\n  const { driverConfiguration = {} } = resourceConfig;\\n  const resourceType = resourceConfig.type || driverConfiguration.type;\\n\\n  if (!resourceConfig || resourceType === \'agdb\') {\\n    // This is assumed to be a legacy data resource\\n    const query = parameters.query || {};\\n    // AGDB -related parameters are added to the query in a special way\\n    const { sort } = parameters;\\n    const { filters } = parameters;\\n    const { limit } = parameters;\\n    const { skip } = parameters;\\n\\n    if (sort != null) {\\n      query.sort = JSON.stringify(sort);\\n    }\\n    if (filters != null) {\\n      query.query = JSON.stringify(filters);\\n    }\\n    if (limit != null) {\\n      query.limit = limit;\\n    }\\n    if (skip != null) {\\n      query.skip = skip;\\n    }\\n\\n    const backendResourceName = (resourceConfig && resourceConfig.agdb_id) || resourceName;\\n    const data = await supersonic.resource.findAll(backendResourceName, query);\\n    return (data && data.value && data.value.objects) || [];\\n  }\\n  // Load a local data resource\\n  if (resourceType === \'local\') {\\n    const { appId } = await supersonic.api.app.getAppId();\\n    const keyPrefix = `local-resource:${appId}:${resourceName}:`;\\n    const { data: allKeys } = await supersonic.api.asyncStorage.getAllKeys();\\n    const keys = allKeys.filter((key) => key.startsWith(keyPrefix));\\n    const { data: results } = await supersonic.api.asyncStorage.multiGet({ data: keys });\\n    return (results || [])\\n      .map(([, record]) => {\\n        if (typeof record === \'string\') {\\n          try {\\n            return JSON.parse(record);\\n          } catch (error) {\\n            return null;\\n          }\\n        }\\n        return record;\\n      })\\n      .filter((record) => record != null && typeof record === \'object\' && typeof record.id !== \'undefined\');\\n  }\\n  if (supersonic.api.data.drivers && resourceType in supersonic.api.data.drivers) {\\n    const driver = supersonic.api.data.drivers[resourceType];\\n    if (!driver.execute) {\\n      throw new Error(`Invalid or missing driver for Resource ${resourceName}`);\\n    }\\n    let authConfig;\\n    if (resourceType === \'firestore\') {\\n      try {\\n        const { firebase } = supersonic.api;\\n        const currentUser = await new Promise((resolve, reject) => {\\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\\n            unsubscribe();\\n            resolve(user);\\n          }, reject);\\n        });\\n        const token = await currentUser.getIdToken();\\n        authConfig = {\\n          type: \'bearer\',\\n          authToken: token,\\n        };\\n      } catch (err) {\\n        /* ignore error and attempt query anyway */\\n      }\\n    }\\n    const agQuery = {\\n      resource: resourceConfig,\\n      operation: \'list\',\\n      authConfig,\\n      ...request,\\n    };\\n    const response = await driver.execute(agQuery);\\n\\n    if (!response || response.message) {\\n      if (resourceType === \'firestore\') {\\n        let code; let message; let status;\\n        try {\\n          ({ code, message, status } = response.driverRawError.response.data[0].error);\\n        } catch (e) {\\n          message = response.message;\\n        }\\n        // eslint-disable-next-line no-throw-literal\\n        throw {\\n          type: \'firestore\',\\n          code,\\n          message,\\n          status,\\n        };\\n      }\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n\\n    if (!response || response.message) {\\n      throw new Error(response ? response.message : \'Request failed\');\\n    }\\n    const records = response.records || response.data || [];\\n    return records;\\n  }\\n  // Load a \\"REST\\" data resource\\n  const operation = resourceConfig.operations.list;\\n  if (!operation) {\\n    throw new Error(`Resource ${resourceName} does not support getting record collections`);\\n  }\\n  const requestParameters = [\\n    ...resourceConfig.parameters,\\n    ...operation.parameters,\\n  ];\\n  const headers = {};\\n  const queryComponents = [];\\n  let url = `${resourceConfig.base_url}${operation.relative_path || \'\'}`;\\n  requestParameters.forEach((parameter) => {\\n    let value = parameters[parameter.id];\\n    if (parameter.is_static || typeof value === \'undefined\') {\\n      value = parameter.default;\\n    }\\n    if (value == null) {\\n      // No value for this parameter\\n      if (parameter.is_optional) {\\n        return;\\n      }\\n      throw new Error(`Missing required parameter ${JSON.stringify(parameter.title)}`);\\n    }\\n    // Map the parameter to headers/URL/query\\n    const { placement } = parameter;\\n    const placementKey = parameter.placement_key;\\n    if (placement === \'header\') {\\n      // Add to headers\\n      headers[placementKey] = value;\\n    } else if (placement === \'query\') {\\n      // Add to the URL as a query parameter\\n      queryComponents.push(`${encodeURIComponent(placementKey)}=${encodeURIComponent(String(value))}`);\\n    } else if (placement === \'path\') {\\n      // Replace the placeholder in the URL with escaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), encodeURIComponent(String(value)));\\n    } else if (placement === \'url\') {\\n      // Replace the placeholder in the URL with unescaped string\\n      url = url.replace(new RegExp(`{\\\\\\\\s*${placementKey}\\\\\\\\s*}`, \'g\'), String(value));\\n    }\\n  });\\n  // Add any query parameters to the URL\\n  if (queryComponents.length) {\\n    const newQuery = queryComponents.join(\'&\');\\n    url = url.replace(/(?:\\\\?(.*))?$/, (_, query) => (query ? `?${query}&${newQuery}` : `?${newQuery}`));\\n  }\\n  // Perform the request\\n  const response = await fetch(url, { method: \'GET\', headers });\\n  if (!response.ok) {\\n    throw response;\\n  }\\n  const responseJson = await response.json();\\n  let results = responseJson;\\n  const resultPath = operation.response_key_path ? operation.response_key_path.split(\'.\') : [];\\n  while (results != null && resultPath.length) {\\n    results = results[resultPath.shift()];\\n  }\\n  if (!Array.isArray(results)) {\\n    throw new Error(`\\nThe result was not an array. Maybe the data you\'re looking for is inside one of the response object keys?\\n\\n${JSON.stringify(responseJson, null, 2)}\\n`);\\n  }\\n  return results;\\n}\\n\\ntry {\\n  const records = await makeRequest();\\n  return [0, { records: !isMappedAdapter ? records : records.map((record) => importRecord(record, mappingFields)) }];\\n} catch (error) {\\n  // eslint-disable-next-line no-console\\n  // console.warn(error);\\n  if (error.type === \'firestore\') {\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.code,\\n        message: `${error.status}: ${error.message}`,\\n      },\\n    }];\\n  }\\n\\n  let errorStr = String(error);\\n\\n  if (errorStr.startsWith(\'Error: Couldn\\\\\'t find data resource\')) {\\n    return [1, {\\n      error: {\\n        code: \'resourceNotFound\',\\n        status: 404,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  if (errorStr === \'TypeError: Failed to fetch\') {\\n    errorStr += \'. Does the server allow CORS?\';\\n    return [1, {\\n      error: {\\n        code: \'requestFailed\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  } if (!error.json) {\\n    return [1, {\\n      error: {\\n        code: \'unknown\',\\n        status: -1,\\n        message: errorStr,\\n        rawError: error,\\n      },\\n    }];\\n  }\\n  let rawError;\\n  try {\\n    const body = await error.json();\\n    rawError = body;\\n    errorStr = `JSON error response from server: ${JSON.stringify(body)}.`;\\n  } catch {\\n    errorStr = \'Non-JSON error body.\';\\n    rawError = { message: errorStr };\\n  } finally {\\n    // eslint-disable-next-line no-unsafe-finally\\n    return [1, {\\n      error: {\\n        code: \'serverError\',\\n        status: error.status,\\n        message: errorStr,\\n        rawError,\\n      },\\n    }];\\n  }\\n}","name":"Get record collection","type":"function2","noerr":0,"wires":[["1fe9fc4d.4458c"],["1c88f5a9.1d6dc"]],"outputs":2,"function_inputs":{"key":{"request":{"key":"request","source":"input"},"contextId":{"key":"contextId","source":"msg"},"supersonic":{"key":"supersonic","source":"msg"}},"source":"object"},"function_outputs":[{"type":"object","properties":{"records":{"name":"records","type":"dataResourceListResponse","title":"Collection of records","description":"The successfully retrieved collection of records."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while fetching the collection of records."}},"additionalProperties":false}]},{"id":"own_8fe6bea6.1072","in":[{"x":40,"y":40,"wires":[{"id":"6afc87de.47ec9"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1333ac45.8009c","port":0}]},{"x":490,"y":100,"wires":[{"id":"6b1b3c9b.2009a","port":0}]}],"name":"Delete record","type":"subflow","arguments":[{"name":"request","type":"dataResourceDeleteRequest","title":"Delete data record request","minLength":1,"description":"Configuration required by the data resource to delete a single data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceDeleteResponse","title":"Response","description":"Response returned by the data resource after the record is successfully deleted."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while deleting the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_d51109f.3b25d","in":[{"x":40,"y":40,"wires":[{"id":"19b93bf3.89208"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"c55913f3.8d802","port":0}]},{"x":490,"y":100,"wires":[{"id":"731bd1e9.4983c","port":0}]}],"name":"Get record","type":"subflow","arguments":[{"name":"request","type":"dataResourceRetrieveRequest","title":"Get data record request","minLength":1,"description":"Configuration required by the selected data resource to get a single data record."}],"outputSchemas":[{"type":"object","properties":{"record":{"name":"record","type":"dataResourceRetrieveResponse","title":"Record","description":"The successfully retrieved record."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown","responseMustBeObject"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while fetching the record.\\n- `responseMustBeObject`: Thrown if the server does not return an object as a response for a single data record request."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_100f5064.6f140","in":[{"x":40,"y":40,"wires":[{"id":"f0bf1a1a.10aa3"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1fe9fc4d.4458c","port":0}]},{"x":490,"y":100,"wires":[{"id":"1c88f5a9.1d6dc","port":0}]}],"name":"Get record collection","type":"subflow","arguments":[{"name":"request","type":"dataResourceListRequest","title":"Get data record collection request","minLength":1,"description":"Configuration required by the selected data resource to get a collection of data records."}],"outputSchemas":[{"type":"object","properties":{"records":{"name":"records","type":"dataResourceListResponse","title":"Collection of records","description":"The successfully retrieved collection of records."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while fetching the collection of records."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_105ec0bb.2f7d7","in":[{"x":40,"y":40,"wires":[{"id":"dd5da27b.11c99"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"15f7596e.557a0","port":0}]}],"name":"Set data variable","type":"subflow","arguments":[{"name":"assignment","type":"dataReferenceAssignment","title":"Data variable","minLength":1,"description":"Data variable to set"}],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_1d6d336a.9126c","in":[{"x":40,"y":40,"wires":[{"id":"1ed52ea2.56495"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"10544d20.64c85","port":0}]},{"x":490,"y":100,"wires":[{"id":"ca3c4967.8fc25","port":0}]}],"name":"Create record","type":"subflow","arguments":[{"name":"request","type":"dataResourceCreateRequest","title":"Create data record request","minLength":1,"description":"Configuration required by the selected data resource to create a new data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceCreateResponse","title":"Response","description":"Response returned by the data resource after the record is successfully created."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while creating the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_21057d66.1a85e","in":[{"x":40,"y":40,"wires":[{"id":"441d4b92.6ac8d"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"58e438b4.7c48c","port":0}]},{"x":490,"y":100,"wires":[{"id":"1b4bfc12.808a7","port":0}]}],"name":"Update record","type":"subflow","arguments":[{"name":"request","type":"dataResourceReplaceRequest","title":"Update data record request","minLength":1,"description":"Configuration required by the selected data resource to update an existing data record."}],"outputSchemas":[{"type":"object","properties":{"response":{"name":"response","type":"dataResourceReplaceResponse","title":"Response","description":"Response returned by the data resource after the record is successfully updated."}},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["requestFailed","serverError","resourceNotFound","unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `requestFailed`: Thrown if the entire request failed due to e.g. CORS issues or no network connectivity.\\n- `serverError`: Thrown if the server returned an error response.\\n- `resourceNotFound`: Thrown if the resouce you are trying to get was not found.\\n- `unknown`: Thrown if an unknown error occurred while updating the record."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_23268044.e1e2b","in":[{"x":40,"y":40,"wires":[{"id":"12488c73.5bfa4"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"1e52f98a.20216","port":0}]}],"name":"Set page variable","type":"subflow","arguments":[{"name":"variable","type":"pageVariableAssignment","title":"Set page variable","minLength":1,"description":"Sets the target page variable to a new value."}],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_8c38c143.8847e","in":[{"x":40,"y":40,"wires":[{"id":"1d26a8c5.4b053"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"11448d84.84e18","port":0}]},{"x":490,"y":100,"wires":[{"id":"143f182b.61fe3","port":0}]},{"x":490,"y":160,"wires":[{"id":"22694950.7ebb2","port":0}]}],"name":"Pick date","type":"subflow","arguments":[{"name":"initialDate","type":"string","title":"Initial date","description":"Initially selected date in the picker, given as a ISO 8601 format string, i.e. `2019-09-04` (hours, seconds, milliseconds and timezone are irrelevant in this case and will be disregarded)."},{"name":"confirmLabel","type":"string","title":"Confirm button label","default":"Confirm","description":"Text label on the confirm button."},{"name":"cancelLabel","type":"string","title":"Cancel button label","default":"Cancel","description":"Text label on the cancel button"},{"name":"minDate","type":"string","title":"Minimum date","minLength":1,"description":"Minimum date to pick from, inclusive. The user cannot pick a date before this date."},{"name":"maxDate","type":"string","title":"Maximum date","minLength":1,"description":"Maximum date to pick from, inclusive. The user cannot pick a date after this date."}],"buildservice":{"platforms":{"ios":{"includedPlugins":["@react-native-community/datetimepicker"]},"web":{},"android":{"includedPlugins":["@react-native-community/datetimepicker"]}}},"outputSchemas":[{"type":"object","properties":{"pickedDate":{"name":"pickedDate","type":"string","title":"Picked date","description":"Picked date as an ISO 8601 format string, e.g. `2019-10-03`."}},"additionalProperties":false},{"type":"object","properties":{},"additionalProperties":false},{"type":"object","properties":{"error":{"name":"error","type":"object","title":"Error","properties":{"code":{"enum":["unknown"],"type":"string"},"message":{"type":"string"},"rawError":{"type":"value"}},"description":"One of the following error codes:\\n\\n- `unknown`: Thrown if an unknown error occurred while picking a date."}},"additionalProperties":false}],"outputArguments":[]},{"id":"own_91f3e62e.3f65c","in":[{"x":40,"y":40,"wires":[{"id":"1eb859fe.2c9fd"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"2efe9993.2abdf","port":0}]}],"name":"Hide spinner","type":"subflow","arguments":[],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"id":"own_97b54227.3b127","in":[{"x":40,"y":40,"wires":[{"id":"147f90f1.617fe"}]}],"out":[{"x":380,"y":40,"wires":[{"id":"147f90f1.617fe","port":0}]}],"name":"Delay","type":"subflow","arguments":[{"name":"time","type":"number","title":"Time to wait","default":500,"minLength":1,"description":"Time to wait as an integer. Negative values result in 0 delay."},{"enum":["ms","s","min","h"],"name":"unit","type":"string","title":"Unit","default":"ms","minLength":1,"description":"Unit of time to wait: `ms` for millisecond, `s` for second, `min` for minute and `h` for hour."}],"outputArguments":[]},{"id":"own_bd0c25ba.5aaf3","in":[{"x":40,"y":40,"wires":[{"id":"1182b19b.3b257"}]}],"out":[{"x":490,"y":40,"wires":[{"id":"d12b40e5.694bb","port":0}]}],"name":"Alert","type":"subflow","arguments":[{"name":"title","type":"json","title":"Dialog title","minLength":1,"description":"Title text to show on the alert dialog."},{"name":"message","type":"json","title":"Dialog message","description":"Message text to show under the title."},{"name":"dismissLabel","type":"string","title":"Dismiss button label","default":"OK","description":"Text label on the dismiss button."}],"outputSchemas":[{"type":"object","properties":{},"additionalProperties":false}],"outputArguments":[]},{"x":350,"y":110,"z":"data:Users136690890","id":"2c5fdf1.2899a2","type":"subflow:own_97b54227.3b127","wires":[["728fc615.eb39b8"]],"subflow_input_arguments":{"time":{"key":5000,"source":"num"},"unit":{"key":"ms","source":"str"}},"fallbackName":"Delay"},{"x":100,"y":30,"z":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","id":"86d2bd28.e3c7e","type":"event","wires":[["acfd19f2.816f08"]],"idType":"event","eventSource":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be:tap","fallbackName":"Component tap","isConfigurable":true,"pageId":"page.Page1"},{"x":489,"y":215,"z":"data:Users194924645","id":"929532c8.e4261","type":"subflow:own_97b54227.3b127","wires":[["cb9e00f7.58c4c"]],"subflow_input_arguments":{"time":{"key":5000,"source":"num"},"unit":{"key":"ms","source":"str"}},"fallbackName":"Delay"},{"x":877,"y":49,"z":"data:Users194924645","id":"9641b39e.ff185","type":"subflow:own_105ec0bb.2f7d7","wires":[[]],"subflow_input_arguments":{"assignment":{"key":{"data":"records@@@cb9e00f7.58c4c","reference":"FetchedUsers"},"source":{"data":"node","reference":"data-reference"}}},"fallbackName":"Set data variable"},{"x":512,"y":52,"z":"data:Users194924645","id":"cb9e00f7.58c4c","type":"subflow:own_100f5064.6f140","wires":[["9641b39e.ff185","929532c8.e4261"],["929532c8.e4261"]],"request":{"parameters":{"url_date":"selectedDate"},"resourceName":"Users"},"request-type":{"parameters":{"url_date":"page-variable"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{"url_date":"selectedDate"},"resourceName":"Users"},"source":{"parameters":{"url_date":"page-variable"},"resourceName":"resource"}}},"fallbackName":"Get record collection"},{"x":164,"y":187,"z":"data:Users194924645","id":"2c56a4b5.f64a2c","name":"","type":"event","wires":[["cb9e00f7.58c4c"]],"idType":"event","eventSource":"page:1:page-variable:selectedDate:onChange","fallbackName":"Page variable \'selectedDate\' changed","isConfigurable":true},{"x":1113,"y":27.5,"z":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","id":"5bc2dace.78a1e4","type":"subflow:own_23268044.e1e2b","wires":[[]],"variable":{"value":true,"reference":"dateselected"},"variable-type":{"value":"bool","reference":"page-variable-ref"},"subflow_input_arguments":{"variable":{"key":{"value":true,"reference":"dateselected"},"source":{"value":"bool","reference":"page-variable-ref"}}},"pageId":"page.Page1","fallbackName":"Set page variable"},{"x":350,"y":30,"z":"data:Users136690890","id":"728fc615.eb39b8","type":"subflow:own_100f5064.6f140","wires":[["df74c75e.9e1468","2c5fdf1.2899a2"],["2c5fdf1.2899a2"]],"subflow_input_arguments":{"request":{"key":{"resourceName":"Users"},"source":{"resourceName":"resource"}}},"fallbackName":"Get record collection"},{"x":100,"y":30,"z":"data:Users136690890","id":"885fe943.9916e8","type":"event","wires":[["728fc615.eb39b8"]],"idType":"event","eventSource":"page:1:onPageDidMount","fallbackName":"Page mounted","isConfigurable":false},{"x":766,"y":84,"z":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","id":"99f7882e.7190a8","type":"subflow:own_23268044.e1e2b","wires":[[]],"variable":{"value":"pickedDate@@@acfd19f2.816f08","reference":"selectedDate"},"variable-type":{"value":"node","reference":"page-variable-ref"},"subflow_input_arguments":{"variable":{"key":{"value":"pickedDate@@@acfd19f2.816f08","reference":"selectedDate"},"source":{"value":"node","reference":"page-variable-ref"}}},"pageId":"page.Page1","fallbackName":"Set page variable"},{"x":1156,"y":148,"z":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","id":"a0baeb7b.fbb508","type":"subflow:own_23268044.e1e2b","wires":[[]],"variable":{"value":false,"reference":"showimage"},"variable-type":{"value":"bool","reference":"page-variable-ref"},"subflow_input_arguments":{"variable":{"key":{"value":false,"reference":"showimage"},"source":{"value":"bool","reference":"page-variable-ref"}}},"pageId":"page.Page1","fallbackName":"Set page variable"},{"x":465,"y":70,"z":"page:1:component:4e5f7086-09b3-4bc5-8e67-9135c86f20be","id":"acfd19f2.816f08","type":"subflow:own_8c38c143.8847e","wires":[["99f7882e.7190a8","5bc2dace.78a1e4","a0baeb7b.fbb508"],[],[]],"maxDate":"2025-09-01","minDate":"2020-09-01","cancelLabel":"Cancel","initialDate":"","confirmLabel":"Confirm","maxDate-type":"str","minDate-type":"str","cancelLabel-type":"str","initialDate-type":"str","confirmLabel-type":"str","subflow_input_arguments":{"maxDate":{"key":"2025-09-01","source":"str"},"minDate":{"key":"2020-09-01","source":"str"},"cancelLabel":{"key":"Cancel","source":"str"},"initialDate":{"key":"","source":"str"},"confirmLabel":{"key":"Confirm","source":"str"}},"pageId":"page.Page1","fallbackName":"Pick date"},{"x":600,"y":30,"z":"data:Users136690890","id":"df74c75e.9e1468","type":"subflow:own_105ec0bb.2f7d7","wires":[[]],"subflow_input_arguments":{"assignment":{"key":{"data":"records@@@728fc615.eb39b8","reference":"Users1"},"source":{"data":"node","reference":"data-reference"}}},"fallbackName":"Set data variable"},{"x":110,"y":40,"z":"page:1","id":"17a46f4034352.e65515511224f","name":"","type":"event","wires":[["55abc353f9666.d993f33cb2f8b"]],"idType":"event","eventSource":"page:1:onPageDidMount","fallbackName":"Page mounted","isConfigurable":true,"pageId":"page.Page1"},{"x":320,"y":40,"z":"page:1","id":"55abc353f9666.d993f33cb2f8b","type":"subflow:own_91f3e62e.3f65c","wires":[[]],"pageId":"page.Page1","fallbackName":"Hide spinner"},{"x":326,"y":37,"z":"page:3:component:688cbd2e-3263-44ab-9395-74cf74b50484","id":"28c4a016.88898","type":"subflow:own_8c38c143.8847e","wires":[["b348a266.9c937"],[],[]],"subflow_input_arguments":{"maxDate":{"key":"","source":"str"},"minDate":{"key":"","source":"str"},"cancelLabel":{"key":"Cancel","source":"str"},"initialDate":{"key":"","source":"str"},"confirmLabel":{"key":"Confirm","source":"str"}},"pageId":"page.Page3","fallbackName":"Pick date"},{"x":100,"y":30,"z":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d","id":"4bee705a.2af47","type":"event","wires":[["68c131a4.f21f1"]],"idType":"event","eventSource":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d:tap","fallbackName":"Component tap","isConfigurable":true,"pageId":"page.Page3"},{"x":408,"y":104,"z":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d","id":"68c131a4.f21f1","type":"subflow:own_1d6d336a.9126c","wires":[["df0ef6a7.5e7878"],[]],"request":{"parameters":{},"properties":{"date":"date","desk":"desk","building":"building","userName":"userName"},"resourceName":"Users"},"request-type":{"parameters":{},"properties":{"date":"page-variable","desk":"page-variable","building":"page-variable","userName":"page-variable"},"resourceName":"resource"},"subflow_input_arguments":{"request":{"key":{"parameters":{},"properties":{"date":"date","desk":"desk","building":"building","userName":"userName"},"resourceName":"Users"},"source":{"parameters":{},"properties":{"date":"page-variable","desk":"page-variable","building":"page-variable","userName":"page-variable"},"resourceName":"resource"}}},"pageId":"page.Page3","fallbackName":"Create record"},{"x":661,"y":82,"z":"page:3:component:688cbd2e-3263-44ab-9395-74cf74b50484","id":"b348a266.9c937","type":"subflow:own_23268044.e1e2b","wires":[[]],"variable":{"value":"pickedDate@@@28c4a016.88898","reference":"date"},"variable-type":{"value":"node","reference":"page-variable-ref"},"subflow_input_arguments":{"variable":{"key":{"value":"pickedDate@@@28c4a016.88898","reference":"date"},"source":{"value":"node","reference":"page-variable-ref"}}},"pageId":"page.Page3","fallbackName":"Set page variable"},{"x":100,"y":30,"z":"page:3:component:688cbd2e-3263-44ab-9395-74cf74b50484","id":"bc50250a.107db8","type":"event","wires":[["28c4a016.88898"]],"idType":"event","eventSource":"page:3:component:688cbd2e-3263-44ab-9395-74cf74b50484:tap","fallbackName":"Component tap","isConfigurable":true,"pageId":"page.Page3"},{"x":1028,"y":91,"z":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d","id":"dd71b4b2.fc35e8","type":"subflow:own_bd0c25ba.5aaf3","title":"result@@@df0ef6a7.5e7878","wires":[[]],"title-type":"node","dismissLabel":"OK","dismissLabel-type":"str","subflow_input_arguments":{"title":{"key":"result@@@df0ef6a7.5e7878","source":"node"},"message":{"key":"","source":"str"},"dismissLabel":{"key":"OK","source":"str"}},"pageId":"page.Page3","fallbackName":"Alert"},{"x":705,"y":141,"z":"page:3:component:1a1618c2-60dc-4804-90b4-8c9db354329d","id":"df0ef6a7.5e7878","func":"return { result: `Great Job ${inputs.input1} your record was succesfully recorded and added to the database.` };","name":"","type":"function2","noerr":0,"wires":[["dd71b4b2.fc35e8"]],"outputs":"1","function_inputs":{"key":{"input1":"userName"},"source":{"input1":"page-variable"}},"function_outputs":[{"type":"object","properties":{"result":{"type":"string"}},"additionalProperties":false}],"pageId":"page.Page3"},{"x":320,"y":40,"z":"page:3","id":"5551f48824f4e.91e3e4f036066","type":"subflow:own_91f3e62e.3f65c","wires":[[]],"pageId":"page.Page3","fallbackName":"Hide spinner"},{"x":110,"y":40,"z":"page:3","id":"85f61a27ed86d.c25e879fd1b65","name":"","type":"event","wires":[["5551f48824f4e.91e3e4f036066"]],"idType":"event","eventSource":"page:3:onPageDidMount","fallbackName":"Page mounted","isConfigurable":true,"pageId":"page.Page3"}],"theme":{"$saptheme":"rgb(255,255,255)","$fontSizeH1":42,"$fontSizeH2":28,"$fontSizeH3":21,"$fontSizeH4":18,"$fontSizeH5":16,"$fontSizeH6":14,"$sapthemev2":"rgb(255,255,255)","$spacerBase":8,"$colorNotice":"#E68619","$colorShadow":"rgba(36, 36, 38, 0.25)","$fontWeightH1":"600","$fontWeightH2":"600","$fontWeightH3":"600","$fontWeightH4":"400","$fontWeightH5":"700","$fontWeightH6":"600","$iconSizeTiny":8,"$lineHeightH1":52,"$lineHeightH2":36,"$lineHeightH3":28,"$lineHeightH4":24,"$lineHeightH5":24,"$lineHeightH6":24,"$colorNegative":"#E34850","$colorPositive":"#2D9D78","$fontSizeLabel":14,"$iconSizeLarge":32,"$iconSizeSmall":16,"$inputFontSize":16,"$buttonFontSize":18,"$iconSizeMedium":24,"$inputMinHeight":48,"$buttonMinHeight":56,"$cardBorderColor":"rgb(0,0,0)","$cardBorderStyle":"none","$cardBorderWidth":"0","$cardShadowColor":"rgba(36, 36, 38, 0.25)","$colorBackground":"rgb(255,255,255)","$colorFontNotice":"#E68619","$colorNoticeTint":"rgb(233,146,48)","$fontSizeCaption":12,"$fontWeightLabel":"600","$inputFontFamily":"Open Sans","$inputFontWeight":"400","$letterSpacingH1":"normal","$letterSpacingH2":"normal","$letterSpacingH3":"normal","$letterSpacingH4":"normal","$letterSpacingH5":"0.64","$letterSpacingH6":"normal","$lineHeightLabel":24,"$primaryTabColor":"rgb(0,0,0)","$textTransformH1":"none","$textTransformH2":"none","$textTransformH3":"none","$textTransformH4":"none","$textTransformH5":"uppercase","$textTransformH6":"none","$buttonFontFamily":"Open Sans","$cardBorderRadius":3,"$colorFontPrimary":"rgb(0,0,0)","$colorFontSubdued":"rgb(138, 154, 167)","$colorInformative":"rgb(9, 59, 154)","$colorNoticeShade":"rgb(207,121,23)","$fontFamilyHeader":"Open Sans","$imageBorderColor":"rgb(138, 154, 167)","$imageBorderStyle":"none","$imageBorderWidth":0,"$inputBorderStyle":"solid","$inputColorBorder":"rgb(138, 154, 167)","$inputShadowColor":"rgba(36, 36, 38, 0.25)","$buttonBorderStyle":"none","$buttonBorderWidth":0,"$buttonShadowColor":"rgba(36, 36, 38, 0.25)","$cardShadowEnabled":true,"$cardShadowOffsetX":0,"$cardShadowOffsetY":2,"$checkboxSizeLarge":30,"$checkboxSizeSmall":19,"$colorFontDisabled":"rgb(138, 154, 167)","$colorFontNegative":"#E34850","$colorFontPositive":"#2D9D78","$colorNegativeTint":"rgb(230,94,101)","$colorPositiveTint":"rgb(51,177,135)","$fontFamilyContent":"Open Sans","$fontSizeParagraph":16,"$fontWeightCaption":"700","$imageBorderRadius":0,"$inputBorderRadius":0,"$lineHeightCaption":20,"$listItemMinHeight":64,"$primaryAppBgColor":"rgb(240, 241, 244)","$primaryTabBgColor":"rgb(240, 241, 244)","$buttonBorderRadius":3,"$cardMarginVertical":16,"$checkboxSizeMedium":24,"$colorFontHighlight":"rgb(0,62,255)","$colorNegativeShade":"rgb(224,50,59)","$colorPositiveShade":"rgb(39,137,105)","$inputShadowEnabled":false,"$inputShadowOffsetX":0,"$inputShadowOffsetY":0,"$letterSpacingLabel":"0","$listItemImageWidth":48,"$primaryNavBarColor":"rgb(0,0,0)","$textTransformLabel":"none","$buttonShadowEnabled":false,"$buttonShadowOffsetX":0,"$buttonShadowOffsetY":4,"$cardBackgroundColor":"rgb(255,255,255)","$cardPaddingVertical":16,"$checkboxIconChecked":"check-square","$colorContentPrimary":"rgb(0,0,0)","$colorContentSubdued":"rgb(138, 154, 167)","$colorNoticeContrast":"rgb(255, 255, 255)","$fontWeightParagraph":"400","$inputBorderWidthTop":0,"$inputFontLineHeight":24,"$lineHeightParagraph":24,"$listItemBorderColor":"rgb(138, 154, 167)","$listItemBorderStyle":"solid","$listItemBorderWidth":1,"$paddingPageVertical":8,"$primaryTabTintColor":"rgb(9, 59, 154)","$buttonFontLineHeight":24,"$cardShadowBlurRadius":5,"$colorFontInformative":"rgb(9, 59, 154)","$colorFontPlaceholder":"rgb(138, 154, 167)","$colorInformativeTint":"rgb(10,68,178)","$inputBorderWidthLeft":0,"$inputColorBackground":"rgba(255,255,255,0)","$inputPaddingVertical":8,"$letterSpacingCaption":"0.48","$primaryNavBarBgColor":"rgb(240, 241, 244)","$radioButtonSizeLarge":30,"$radioButtonSizeSmall":19,"$textTransformCaption":"uppercase","$cardPaddingHorizontal":16,"$checkboxIconUnchecked":"square","$colorContentHighlight":"rgb(0,62,255)","$colorInformativeShade":"rgb(8,50,130)","$colorNegativeContrast":"rgb(255, 255, 255)","$colorPositiveContrast":"rgb(255, 255, 255)","$inputBorderWidthRight":0,"$inputShadowBlurRadius":0,"$paddingPageHorizontal":16,"$radioButtonSizeMedium":24,"$buttonShadowBlurRadius":7,"$fontSizeParagraphLarge":18,"$fontSizeParagraphSmall":14,"$inputBorderWidthBottom":1,"$inputFontLetterSpacing":"normal","$inputFontTextTransform":"none","$inputPaddingHorizontal":0,"$letterSpacingParagraph":"normal","$textTransformParagraph":"none","$buttonFontLetterSpacing":"normal","$buttonFontTextTransform":"none","$inputLabelFontTextAlign":"left","$listItemImageWidthLarge":72,"$radioButtonIconSelected":"check-square","$colorBackgroundSecondary":"rgb(240, 241, 244)","$colorInformativeContrast":"rgb(255, 255, 255)","$fontWeightParagraphLarge":"400","$fontWeightParagraphSmall":"400","$inputLabelMarginVertical":0,"$lineHeightParagraphLarge":24,"$lineHeightParagraphSmall":16,"$radioButtonIconUnselected":"square","$letterSpacingParagraphLarge":"normal","$letterSpacingParagraphSmall":"normal","$primaryTabInactiveTintColor":"rgb(138, 154, 167)","$textTransformParagraphLarge":"none","$textTransformParagraphSmall":"none","$inputLabelBottomMarginHorizontal":0},"fonts":[],"environment":{"workspaceApp":{"id":284241,"ac_project_id":null},"app":{"id":386482,"demo":false,"paid":false,"free":true,"tokens":{"steroids":"b0324a64e9d1b127442cdf9c4ce51eb7a64023410b11674f9a6b013a5b564341","data":null,"segmentOwnerId":null,"androidGcmSenderProjectId":null},"auth":{"primary":"anonymous"},"title":"Teammates Finder"},"links":{"user_account":"/account"},"endpoints":{"domain":"appgyver.com","auth":"https://rest-auth.appgyver.com/api/v5","data":"https://proxy-api.appgyver.com/v3/","debug":"https://debug-api.appgyver.com/debug_api"},"auth":{"endpoint":"https://rest-auth.appgyver.com/api/v5"},"data":{"type":"rest","endpoint":"https://proxy-api.appgyver.com/v3/","bundle":{"options":{"baseUrl":"https://proxy-api.appgyver.com/v3/","headers":{"steroidsAppId":"386482","steroidsApiKey":"b0324a64e9d1b127442cdf9c4ce51eb7a64023410b11674f9a6b013a5b564341","RestAuthorization":""}},"resources":{}},"collections":[],"relations":[],"business_objects":[]},"modules":{"routes":{}},"lastUpdated":"2021-10-05T10:41:33.571Z"},"dataResources":{"Users":{"id":"Users","type":"rest","operations":{"list":{"parameters":[{"id":"url_date","type":"string","title":"date","isEncoded":false,"is_static":false,"placement":"url","description":"date","is_optional":true,"placement_key":"date"}],"relative_path":"/catalog/Users?$filter=date eq {date}","response_key_path":"value"},"create":{"parameters":[],"relative_path":"/catalog/Users","request_schema":{"type":"object","properties":{"date":{"type":"string","title":"date"},"desk":{"type":"string","title":"desk"},"building":{"type":"string","title":"building"},"userName":{"type":"string","title":"userName"}}}},"replace":{"parameters":[]},"retrieve":{"parameters":[{"id":"url_date","type":"string","title":"date","isEncoded":true,"is_static":false,"placement":"path","description":"userName to retrieve user","is_optional":false,"placement_key":"date"}],"relative_path":"/catalog/Users?$filter=date eq {date}","response_key_path":""}},"parameters":[],"base_url":"https://hotdeskapp-srv-surprised-fossa-if.cfapps.eu10.hana.ondemand.com"}},"connectorConfigurations":{"firebase":{"enabled":false}},"navigation":{"mobile":{"authPageId":null,"isAuthenticationEnabled":false,"defaultTabIndex":0,"tabs":[{"title":"Home","pageId":"page.Page1","iconName":"home"},{"title":"Add Your Desk","pageId":"page.Page3","iconName":"user-plus"}],"enabled":true,"headerEnabled":true,"headerText":null},"desktop":{"isAuthenticationEnabled":false,"defaultTabIndex":0,"tabs":[],"enabled":false,"headerEnabled":true,"headerText":null},"legacyLayouts":{"webMenuType":"side_left"},"screens":["page.Page1","page.Page2","page.Page3"]},"i18n":{"translations":{},"supportedLanguages":[]},"app":{"id":284241,"events":{}},"state":{},"globalCanvas":{"uid":"page.Page2","id":2,"contextId":"canvas/page.Page2","pageId":"page.Page2"}}')},"1SGr":function(e){e.exports=JSON.parse('{"runtimeVersion":"2.12.4"}')},"20nU":function(e,r,t){"use strict";t.d(r,"a",(function(){return f})),t.d(r,"c",(function(){return g})),t.d(r,"b",(function(){return b}));var o=t("DAQC"),n=t("1SGr"),a="#2E3949",i="#00B5FF",s="#006C6F",d="#000000",c="#FFFFFF",p="transparent",l={$SprimaryAppBgColor:"#F1F3F6",$SprimaryAppH1Color:a,$SprimaryAppH2Color:i,$SprimaryAppH3Color:s,$SprimaryAppH4Color:d,$SprimaryAppH5Color:a,$SprimaryAppTextColor:a,$SprimaryAppLinkColor:i,$SprimaryAppIconColor:a,$SprimaryAppIconColorSelected:"#00BFA2",$SprimaryAppBorderColor:a,$SprimaryButtonBgColor:s,$SprimaryButtonTextColor:c,$SprimaryButtonBorderColor:p,$SprimaryItemBgColor:c,$SprimaryItemH1Color:a,$SprimaryItemH2Color:"#A6ABB2",$SprimaryItemBorderColor:p,$SprimaryItemButtonBgColor:p,$SprimaryItemButtonTextColor:a,$SprimaryItemButtonBorderColor:a,$SprimaryItemButtonAltBgColor:p,$SprimaryItemButtonAltTextColor:a,$SprimaryItemButtonAltBorderColor:p,$SsecondaryAppBgColor:"#4ECCFF",$SsecondaryAppBgColors:"#009AD9,#4ECCFF",$SsecondaryAppH1Color:c,$SsecondaryAppH2Color:c,$SsecondaryAppH3Color:c,$SsecondaryAppH4Color:a,$SsecondaryAppH5Color:c,$SsecondaryAppTextColor:d,$SsecondaryAppLinkColor:i,$SsecondaryAppIconColor:c,$SsecondaryAppBorderColor:a,$SsecondaryButtonBgColor:p,$SsecondaryButtonTextColor:a,$SsecondaryButtonBorderColor:a,$SsecondaryButtonAltBgColor:p,$SsecondaryButtonAltTextColor:c,$SsecondaryButtonAltBorderColor:c,$SsecondaryItemBgColor:"#00BFA2",$SsecondaryItemH1Color:c,$SsecondaryItemH2Color:c,$SiconQrColor:i,$SiconCodeColor:"#00BFA2",$SiconOrgColor:s,$SiconSkunkColor:d,$primaryAppBgColor:"#F1F3F6",$primaryAppH1Color:a,$primaryAppH2Color:i,$primaryAppH3Color:s,$primaryAppH4Color:d,$primaryAppH5Color:a,$primaryAppTextColor:a,$primaryAppLinkColor:i,$primaryAppIconColor:a,$primaryAppIconColorSelected:"#00BFA2",$primaryAppBorderColor:a,$primaryTabColor:a,$primaryTabBgColor:"#F1F3F6",$primaryTabInactiveTintColor:"#F1F3F6",$primaryTabTintColor:i,$primaryNavBarColor:"#F1F3F6",$primaryNavBarBgColor:i,$primaryButtonBgColor:s,$primaryButtonTextColor:c,$primaryButtonBorderColor:p,$primaryItemBgColor:c,$primaryItemH1Color:a,$primaryItemH2Color:"#A6ABB2",$primaryItemBorderColor:p,$primaryItemButtonBgColor:p,$primaryItemButtonTextColor:a,$primaryItemButtonBorderColor:a,$primaryItemButtonAltBgColor:p,$primaryItemButtonAltTextColor:a,$primaryItemButtonAltBorderColor:p,$secondaryAppBgColor:"#4ECCFF",$secondaryAppBgColors:"#009AD9,#4ECCFF",$secondaryAppH1Color:c,$secondaryAppH2Color:c,$secondaryAppH3Color:c,$secondaryAppH4Color:a,$secondaryAppH5Color:c,$secondaryAppTextColor:d,$secondaryAppLinkColor:i,$secondaryAppIconColor:c,$secondaryAppBorderColor:a,$secondaryButtonBgColor:p,$secondaryButtonTextColor:a,$secondaryButtonBorderColor:a,$secondaryButtonAltBgColor:p,$secondaryButtonAltTextColor:c,$secondaryButtonAltBorderColor:c,$secondaryItemBgColor:"#00BFA2",$secondaryItemH1Color:c,$secondaryItemH2Color:c,$iconQrColor:i,$iconCodeColor:"#00BFA2",$iconOrgColor:s,$iconSkunkColor:d,$hasDeveloperLogin:!0},u=t("wRAm"),f=t("/JH9"),g=t("r5xH"),b=[];Object(o.a)({dolanParserVersion:u.dolanParserVersion,appVersion:n.runtimeVersion,appType:n.APP_TYPE,imageProxy:{"https://appgyver-meap-assets.s3.amazonaws.com/uploads/asset/acual_asset/af64cbbc-222e-4773-a41c-e0c7d54b4cb4/image.png":"/images/img1546586742.png"},theme:l,disableConsoleInProduction:!0})},3:function(e,r,t){t("ZHK4"),e.exports=t("7xIC")},DAQC:function(e,r,t){"use strict";(function(e){t.d(r,"a",(function(){return i}));var o=t("NKp5"),n=t("GHki"),a=t("G5mR"),i=(t("yw8J"),function(r){var t=r.dolanParserVersion,i=r.appVersion,s=r.appType,d=r.imageProxy,c=r.theme,p=r.disableConsoleInProduction;e.RUNTIME_VERSION=i,e.DOLAN_PARSER_VERSION=t,e.APP_TYPE=s,e.IMAGE_PROXY=d,e.THEME=c,e.DEFAULT_THEME=c,console.reportErrorsAsExceptions=!1,console.disableYellowBox=!0,c.$theme="selector",n.a.build(c),!0===p&&(e.console={info:function(){},log:function(){},assert:function(){},warn:function(){},debug:function(){},error:function(){},time:function(){},timeEnd:function(){}}),o.b&&Object(a.a)((function(e){console.error("RN EXCEPTION",e)}),!1)})}).call(this,t("lpmq"))},G5mR:function(e,r,t){"use strict";(function(e){t.d(r,"a",(function(){return s}));var o=t("ErFu"),n=t("4LIG"),a=o.a.ReactNativeExceptionHandler,i=function(){},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i,r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if("function"!==typeof e||"boolean"!==typeof r)return console.log("setNativeExceptionHandler is called with wrong argument types.. first argument should be callback function and second argument is optional should be a boolean"),void console.log("Not setting the native handler .. please fix setNativeExceptionHandler call");"ios"===n.a.OS?a.setHandlerforNativeException(t,e):a.setHandlerforNativeException(t,r,e)}}).call(this,t("lpmq"))},IlR1:function(e,r,t){"use strict";t.r(r);var o=t("fpXh");r.default=o.a},J4zp:function(e,r,t){var o=t("wTVA"),n=t("m0LI"),a=t("wkBT");e.exports=function(e,r){return o(e)||n(e,r)||a()}},ZHK4:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/_app",function(){return t("IlR1")}])},fpXh:function(e,r,t){"use strict";(function(e){var o=t("pVnL"),n=t.n(o),a=t("J4zp"),i=t.n(a),s=t("ERkP"),d=t.n(s),c=t("aWzz"),p=t.n(c),l=t("uDfI"),u=t("iyjJ"),f=t("nYcI"),g=t("pJlx"),b=t("dypN"),m=t("U7W4"),h=t("6mJR"),y=t("AtZW"),w=t("ya+1"),v=t("7xIC"),x=t("Xwyj"),C=t("pNCJ"),T=t("aXtF"),P=t("U/5d"),R=t("mG/Q"),W=t("paaU"),S=(t("Enq4"),t("ExIq"),t("WCGA")),k=t("yw8J"),I=t("20nU");e.LOCAL_DOLAN=I.a,e.VISIBILITY_BATCH={},e.PAGE_COMPONENT_MAP={PageDolan:S.a},e.supersonic=Object(u.a)(),"undefined"!==typeof document&&I.b.forEach((function(e){var r=e.fontFamily,t=e.weight,o=e.source;Object(m.c)({fontFamily:r,weight:t,source:o})}));var L=function(r){var t=r.isLoading,o=r.spinnerMessage,a=r.isAuthenticated,c=r.navConfig,p=r.Component,l=r.pageProps,u=Object(v.useRouter)(),m=Object(s.useState)(void 0!==e.DOLAN),R=i()(m,2),W=R[0],S=R[1];if(Object(s.useEffect)((function(){Object(b.k)(l,c),S(!0)}),[]),Object(s.useEffect)((function(){var e=u.asPath.replace("/","");W&&c.authenticationEnabled&&!a&&!I.c[e]&&g.a.replaceToStack({route:""})}),[u.asPath,W]),Object(s.useEffect)((function(){W&&(Object(w.b)(l.flows,e.supersonic).then((function(){e.STORE.dispatch({type:x.a,payload:{}})})),Object(f.f)(),Object(f.e)(),Object(C.c)())}),[W]),W){var k=u.asPath.replace("/",""),L=Object(T.b)(c.blueprint,c.authenticationEnabled&&!a&&!I.c[k],"landscape");return d.a.createElement(d.a.Fragment,null,d.a.createElement(L,n()({},l,{navConfig:c,Component:p,selector:!1}),t?d.a.createElement(P.a,{backgroundColor:Object(b.j)(h.V),text:o}):null,d.a.createElement(y.h,null),d.a.createElement(y.a,null),d.a.createElement(y.g,null)))}return null};L.propTypes={isLoading:p.a.bool.isRequired,isDolanReady:p.a.bool.isRequired,isAuthenticated:p.a.bool.isRequired,dispatch:p.a.func.isRequired};var B=Object(W.a)((function(e){return{isDolanReady:e.isDolanReady,isLoading:e.isLoading,spinnerMessage:e.spinnerText,spinnerBackgroundColor:e.spinnerBackgroundColor,isAuthenticated:e.isAuthenticated,navConfig:e.navConfig,timestamp:e.dolanTimestamp}}))(L);r.a=k.a.withRedux((function(r){return d.a.createElement(l.a,{store:e.STORE,context:R.a},d.a.createElement(B,r))}))}).call(this,t("lpmq"))},iyjJ:function(e,r,t){"use strict";(function(e){t.d(r,"a",(function(){return g}));var o=t("97Jx"),n=t.n(o),a=t("e+UQ"),i=t("B4Fj"),s=t("SKcU"),d=t("nYcI"),c=t("N719"),p=t("pNCJ"),l=t("wgY5"),u=t("nsO7"),f=function(r){var t=e._INTERNALS_.DEPRECATEDcontextCache[r];t?t.refreshData():a.default.logWarning("refreshData: Context with ContextID "+r+" does not exist!")},g=function(){var r=s.getAppVariable,t=s.setAppVariable,o=s.setPageVariable,g=s.getParameter,b=s.getResource,m=s.setResource,h=s.getSelfProperty,y=s.getComponentProperty,w=s.getComponentContextProp,v=s.getComponentState,x=s.setComponentState,C=s.getInstanceStatesAsArray,T=s.getInstanceStatesAsObject,P=s.listPageDataReferences,R=s.listPageParameters,W=s.listPageComponents,S=s.getContext,k=s.setContextState,I=s.setSelfProperty,L={context:s,api:d.d,resource:i.a,init:function(){return e._INTERNALS_.DEPRECATEDcontextState.init()},setComponentState:x,getSelfProperty:h,setSelfProperty:I,getComponentProperty:y,getComponentContextProp:w,setParameter:o,setResource:m,setStorage:t,getComponentState:v,getInstanceStatesAsArray:C,getInstanceStatesAsObject:T,listPageDataReferences:P,listPageParameters:R,listPageComponents:W,getParameter:g,getResource:b,refreshData:f,getStorage:r,current:function(e,r){return S(r).s[e]},setContextState:k,rtc:c.a,references:{resolve:function(){return{}}},event:{dispatch:function(r,t,o){var i=n()({},o,t);a.default.logWarning("DEPRECATED: supersonic.event.dispatch",r,new Error);var s=e.red.nodes.getNode(r);if(s){var d=s.z&&s.z.match(/^page:[0-9]+:component:(.*?)$/),c=d&&d[1];if(c){var p,l=null==(p=i.componentInstanceId.match(/\/(\d+)\/(\d+)$/))?void 0:p.splice(1,3);i.componentInstanceIdPath||(i.componentInstanceIdPath=[]),i.componentInstanceIdPath.push(i.componentInstanceId),i.eventOutComponentInstanceId=i.componentInstanceId,i.componentInstanceId=c,l&&l.length>=1&&(i.componentInstanceId+="/"+l[0]),"currentIndex"in i&&void 0!==i.currentIndex&&null!==i.currentIndex&&(i.componentInstanceId+="/"+i.currentIndex)}}e.red.emit(r,i)},triggerDirectEvent:p.a},auth:{users:{getCurrentUser:function(){return{then:function(){}}}}}};return e.moment=l,e._=u,L}}).call(this,t("lpmq"))},m0LI:function(e,r){e.exports=function(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var t=[],o=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(o=(i=s.next()).done)&&(t.push(i.value),!r||t.length!==r);o=!0);}catch(d){n=!0,a=d}finally{try{o||null==s.return||s.return()}finally{if(n)throw a}}return t}}},pVnL:function(e,r){function t(){return e.exports=t=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},t.apply(this,arguments)}e.exports=t},r5xH:function(e){e.exports=JSON.parse("{}")},wRAm:function(e){e.exports=JSON.parse('{"dolanParserVersion":"4.0.5"}')},wTVA:function(e,r){e.exports=function(e){if(Array.isArray(e))return e}},wkBT:function(e,r){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}}},[[3,0,1,8,5,6,10,7,9,2,3,4,18]]]);